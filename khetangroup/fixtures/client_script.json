[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.084004",
  "module": "khetangroup",
  "name": "Calculate Amount In Material request",
  "script": "frappe.ui.form.on(\"Material Request\",{\r\tafter_save: function(frm)\r\t{\r\t    \r\t\t$.each(frm.doc.items || [], function (i, d)\r        {\t\t\r            var a = d.qty;\r            var b = d.rate;\r    \t\tvar c = a * b;\r    \t\tvar h = d.amount;\r    \t\tif(b == h )\r    \t\t\r    \t\t{\r    \t\t    d.amount = c;\r    \t\t}\r        });\r    {\r        var grand_total = 0;\r        $.each(frm.doc.items, function(i, d) {\r                grand_total += d.amount;\r        });\r        frm.set_value(\"total_amount\",grand_total);\r        frm.refresh_field(\"total_amount\");\r    }    \r    }\r});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.472466",
  "module": "khetangroup",
  "name": "Set Grade Counts",
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_save(frm) {\n\t    var name  = frm.doc.name;\n\t    var qty = 0\n\t    var n=\"\"\n\t    var m=\"\"\n\t    var z=\"\"\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t \n\t\t   var a = d.grade;\n\t\t    if(d.item_202 == 1){\n\t\t        if(n===\"\"){\n\t\t         n =  d.item_code;\n\t\t        }\n\t\t        else{\n\t\t            n=n+ \",\" + d.item_code;\n\t\t        }\n\t\t    }\n\t\t    \n\t\t    else if(d.item_316 == 1){\n\t\t        if(m===\"\"){\n\t\t         m =  d.item_code ;\n\t\t        }\n\t\t        else{\n\t\t            m=m+ \",\" + d.item_code;\n\t\t        }\n\t\t    }\n\t\t     else if(d.item_304 == 1){\n\t\t         if(z===\"\"){\n\t\t         z =  d.item_code ;\n\t\t        }\n\t\t        else{\n\t\t            z=z+ \",\" + d.item_code;\n\t\t        }\n\t\t    }\n\t\t});\n\t\t\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t         qty = qty + parseFloat(d.weight);\n\t\t});\n\t\tvar a1,b1,c1;\n\t\tif (n===\"\"){\n\t\t    var n1=0;\n\t\t    frm.set_value(\"quantity202\",a1);\n\t\t}\n\t\telse{\n\t\t     var n2=n.split(\",\");\n\t\t     a1=n2.length;\n\t\t     frm.set_value(\"quantity202\",a1);\n\t\t}\n\t\tif (m===\"\"){\n\t\t    var m1=0;\n\t\t    b1=0;\n\t\t    frm.set_value(\"quantity316\",b1);\n\t\t}\n\t\telse{\n\t\t     var m2=m.split(\",\");\n\t\t     b1=m2.length;\n\t\t     frm.set_value(\"quantity316\",b1);\n\t\t} \n\t\tif (z===\"\"){\n\t\t    var z1=0;\n\t\t    c1=0;\n\t\t    frm.set_value(\"quantity304\",c1);\n\t\t}\n\t\telse{\n\t\t     var z2=z.split(\",\");\n\t\t     c1=z2.length;\n\t\t     frm.set_value(\"quantity304\",c1);\n\t\t}\n\t\tvar total_no_items=a1+b1+c1;\n\t\tfrm.set_value(\"total_no_items\",total_no_items);\n\t\tfrm.set_value(\"total_sold_weight\",qty);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.056264",
  "module": "khetangroup",
  "name": "Box Unit-1",
  "script": "frappe.ui.form.on(\"Quotation Item\", \"qty_box\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    // var default_set = d.default_set;\n    var qty_box=d.qty_box;\n    \n  \n    if (d.products_parent_type == \"Channel Type\"){\n                var inches = d.size;\n               \n                // var total_set = qty_box * default_set;\n                var total_set = qty_box\n        // alert(inches);\n                if (inches<10){\n                 \n                    var a=Number(inches);\n                    var add_in = a+2;\n            // alert(add_in)\n                    // alert(total_set);\n                    frappe.model.set_value(cdt, cdn, \"special_size\", add_in);\n            // var qty_box=d.qty_box;\n            // var total_set = qty_box * default_set;\n                    var total_inches1 = total_set * d.special_size;\n                    // alert(total_inches1);\n                    frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\n                    frappe.model.set_value(cdt, cdn, \"qty\", total_set);\n                    frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches1);\n                }\n                else{\n                \n            // alert(\"This is more than 10\")\n            // var qty_box=d.qty_box;\n            // var total_set = qty_box * default_set;\n                    var total_inches2 = total_set * d.size;\n        // alert(total_inches);\n                    // alert(total_set);\n                    frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\n                    frappe.model.set_value(cdt, cdn, \"qty\", total_set);\n                    frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches2);\n                }\n    }\n    else if (d.products_parent_type == \"Hinge Type\"){\n       \n        // alert(\"This is Special Item.\");\n        var qty_box1 = d.qty_box;\n        // var total_set1 = qty_box1 * default_set;\n        var total_set1 = qty_box1 \n        var total_inches = total_set1 * 1;\n        // alert(total_inches);\n        frappe.model.set_value(cdt, cdn, \"total_set\", total_set1);\n        frappe.model.set_value(cdt, cdn, \"qty\", total_set1);\n        frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches);\n    }\n    \n   \n\n        \n    cur_frm.refresh_field(\"Quotation Item\");\n});\nfrappe.ui.form.on(\"Quotation Item\", \"special_size\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    // alert(\"This is special size block\");\n    var qty_box=d.qty_box;\n    // var default_set = d.default_set\n    // var total_set = qty_box * default_set;\n    var total_set = qty_box;\n    var total_inches = total_set * d.special_size;\n    // alert(total_inches);\n    // alert(total_set);\n    frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\n    frappe.model.set_value(cdt, cdn, \"qty\", total_set);\n    frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches);\n    if (d.price_list_rate !== \"\"){\n        // alert(\"hey\")\n        var rate=d.price_amt*d.special_size;\n        frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate);\n    }\n});\n\n\n\n\n\n\n\nfrappe.ui.form.on('Quotation Item', {\n\titem_code(frm) {\n   $.each(frm.doc.items, function(i, d) {\n        frappe.db.get_value('Products Type',\n    {'name': d.products_type},\n    'select_product_type', \n    function(response) { \n        var b = response.select_product_type; \n        d.products_parent_type = b\n        \n    });\n   });\n\t    \n\t    }\n\t\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.045350",
  "module": "khetangroup",
  "name": "Price Amt Unit-1",
  "script": "frappe.ui.form.on(\"Quotation Item\", \"price_amt\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    if (d.products_parent_type == \"Channel Type\"){\n         var inches = d.size;\n        if (inches<10){\n            var rate=d.price_amt*d.special_size;\n            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate);\n        }\n        else{\n            var rate0=d.price_amt * d.size;\n            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate0);\n        }\n    }\n    else if (d.products_parent_type == \"Hinge Type\"){\n        var rate1=d.price_amt;\n        frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate1);\n    }\n});\n\nfrappe.ui.form.on(\"Quotation Item\", \"discount_percentage\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    var discount = d.discount_percentage;\n    var price_list_rate = d.price_list_rate;\n    var dis_value = price_list_rate-((price_list_rate*discount)/100);\n    var new_value = price_list_rate * d.qty - dis_value * d.qty\n    frappe.model.set_value(cdt, cdn, \"discount_amt\", new_value);\n});\n\nfrappe.ui.form.on(\"Quotation Item\", \"qty\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    var discount = d.discount_percentage;\n    var price_list_rate = d.price_list_rate;\n    var dis_value = price_list_rate-((price_list_rate*discount)/100);\n    var new_value = price_list_rate * d.qty - dis_value * d.qty\n    frappe.model.set_value(cdt, cdn, \"discount_amt\", new_value);\n});\n\nfrappe.ui.form.on(\"Quotation Item\", \"price_amt\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    var discount = d.discount_percentage;\n    var price_list_rate = d.price_list_rate;\n    var dis_value = price_list_rate-((price_list_rate*discount)/100);\n    var new_value = price_list_rate * d.qty - dis_value * d.qty\n    frappe.model.set_value(cdt, cdn, \"discount_amt\", new_value);\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.095313",
  "module": "khetangroup",
  "name": "Discount Total Unit-1",
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_save(frm) {\n\t    var name  = frm.doc.name;\n\t    var qty = 0\n\t    var n=0\n\t    var m=0\n\t    var z=0\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t \n\t\t   var a = d.discount_amt;\n\t\t  // alert(a)\n\t\t   n=n+a\n\t\t  // console.log(n)\n\t\t  // });\n\t\t});\n\t\tfrm.set_value(\"discounted_amount\",n);\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.153802",
  "module": "khetangroup",
  "name": "Filtered Option In Item Table Purchase invoice",
  "script": "cur_frm.cscript.company = function(frm) {\n    var company=cur_frm.doc.company\n    console.log(company)\n        cur_frm.set_query(\"item_code\", \"items\", function() {\n            return {\n                \"filters\": {\n                    \n                    \"company\":cur_frm.doc.company\n                    \n                    \n                }\n            };\n          });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.139549",
  "module": "khetangroup",
  "name": "Filtered option Purchase Receipt",
  "script": "cur_frm.cscript.company = function(frm) {\n    var company=cur_frm.doc.company\n    console.log(company)\n        cur_frm.set_query(\"item_code\", \"items\", function() {\n            return {\n                \"filters\": {\n                    \n                    \"company\":cur_frm.doc.company\n                    \n                    \n                }\n            };\n          });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.128936",
  "module": "khetangroup",
  "name": "Filtered Option in item : sales invoice",
  "script": "cur_frm.cscript.company = function(frm) {\n    var company=cur_frm.doc.company\n    console.log(company)\n        cur_frm.set_query(\"item_code\", \"items\", function() {\n            return {\n                \"filters\": {\n                    \n                    \"company\":cur_frm.doc.company\n                    \n                    \n                }\n            };\n          });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.435309",
  "module": "khetangroup",
  "name": "Material Transfer For Supplier",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\tfrm.set_query(\"voucher_no\",function(){\n\t    return{\n\t        filters:{\n\t            'party_name_':cur_frm.doc.party_name_,\n\t            'stock_entry_type':\"Material Transfer For Supplier\",\n\t            'returnable_or_non_returnable':\"Returnable\",\n\t             'pending_qty':['>',0]\n\t           \n\t        }\n\t        \n\t    };\n\t});\n\n\t\tfrm.set_query(\"delivery_note\",function(){\n\t    return{\n\t        filters:{\n\t            'customer':cur_frm.doc.party,\n\t            'pending_qty':['>',0]\n\t        }\n\t        \n\t    };\n\t});\n\n\tfrm.set_query(\"company_address\",function(){\n\t    return{\n\t        filters:{\n\t            'is_your_company_address':1\n\t        }\n\t    };\n\t});\n\tfrm.set_query(\"gatepass_no\",function(){\n\t    return{\n\t        filters:{\n\t             'purpose':\"Returnable Received Material\"\n\t        }\n\t    }\n\t})\n    \n\t}\n});\n\n\nfrappe.ui.form.on(\"Stock Entry\",\"company_address\",function(frm, cdt, cdn) {\n    \n    if(frm.doc.company_address){\n        return frm.call({\n            method : \"frappe.contacts.doctype.address.address.get_address_display\",\n            args:{\n                \"address_dict\":frm.doc.company_address\n            },\n            callback: function(r){\n                if(r.message)\n                    frm.set_value(\"company_address_display\", r.message);\n            }\n        });\n    \n    }\n    else{\n        frm.set_value(\"company_address_display\", \"\");\n    }\n    \n\t\n});\n\nfrappe.ui.form.on('Stock Entry', {\n     voucher_no: function(frm) {\n        frappe.call({\n\t\t\t\"method\": \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Stock Entry\",\n\t\t\t\tname: frm.doc.voucher_no\n\t\t\t},\n\t\t\tcallback: function(data){\n\t\t\t\tfrm.clear_table('items');\n\t\t\t\tlet items = data.message.items;\n\t\t\t\t\n\t\t\t\tfor (var item in items) {\n\t\t\t\t\tvar row = frm.add_child(\"items\");\n\t\t\t\t\trow.item_code = items[item].item_code;\n\t\t\t\t\trow.qty = items[item].qty;\n\t\t\t\t\trow.uom = items[item].uom;\n\t\t\t\t\trow.stock_uom = items[item].stock_uom;\n\t\t\t\t\trow.basic_rate = items[item].basic_rate;\n\t\t\t\t\trow.transfer_qty = items[item].transfer_qty;\n\t\t\t\t\trow.conversion_factor = items[item].conversion_factor;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tfrm.refresh_field(\"items\");\n\t\t\t}\n\t\t});\n\t\t\n    },\n});\nfrappe.ui.form.on(\"Stock Entry\",{\n\tvalidate: function(frm)\n{\n    var a = 0;\n    $.each(frm.doc.items, function(i, d) {\n            a += d.qty;\n    });\n    frm.set_value(\"total_qty\",a);\n    frm.refresh_field(\"total_qty\");\n\n}});\n\nfrappe.ui.form.on('Stock Entry', {\n\tdelivery_note:function(frm) {\n\t    \n\t\tvar u = frm.doc.delivery_note;\n\t\n\t    frappe.call({\n\t        method:\"voucher_no\",\n\t        args:{\"no\":u},\n\t    }).then(records =>{\n\t        var item = records[\"item\"];\n\t       \n\t        var item_code = item.split(\",\");\n\t       var len = item_code.length;\n\n\t        var qty = records[\"qty\"];\n\t         var qty1 = qty.split(\",\");\n\n\t        var rate = records[\"rate\"];\n\t        var rate1 = rate.split(\",\");\n\n\t        var item_name = records[\"item_name\"];\n\t        var item_name1 = item_name.split(\",\");  \n\t        \n\t         var description = records[\"description\"];\n\t        var description1 = description.split(\",\");\n\t        \n\t        var amount = records[\"amount\"];\n\t         var amount1 = amount.split(\",\");\n\n\t        var stock_uom = records[\"stock_uom\"];\n\t        var stock_uom1 = stock_uom.split(\",\")\n\n\t        var uom = records[\"uom\"];\n\t        var uom1 = uom.split(\",\")\n\t        \n\t       \n\t       \n\t         var child = frm.doc.delivery_note_item;\n\t        \n\t        if(child === undefined)\n\t       \n\t         {\n\t            for(var a = 0;a < len; a++){\n\t             \n\t                   var row = frappe.model.add_child(cur_frm.doc, \"Stock entry\", \"delivery_note_item\");\n                \t         row.item_code = item_code[a];\n                \t         row.qty = qty1[a];\n                \t         row.rate = rate1[a];\n                \t         row.amount = amount1[a];\n                \t         row.stock_uom = stock_uom1[a];\n                \t         row.uom = uom1[a];\n                \t         row.item_name = item_name1[a];\n                \t         row.description = description1[a];\n                \t         frm.refresh_fields(\"delivery_note_item\");\n\t              }\n\t         }\n\t    });\n\t  \n}\n  \n});\n\nfrappe.ui.form.on(\"Stock Entry\",{\n    after_save:function(frm){\n         if(cur_frm.doc.stock_entry_type ==\"Subcontracting Received Material\"){\n        var a = cur_frm.doc.total_qty_delivery_note;\n        console.log(a);\n          $.each(frm.doc.items || [], function (i, d)\n            {\n                var b = d.qty;\n                console.log(b);\n                var c=(a - b);\n               \n                d.pending_qty = c;\n                console.log(c);\n            });\n         }\n    }\n});\nfrappe.ui.form.on(\"Stock Entry\",{\n    before_submit:function(frm){\n        if(cur_frm.doc.stock_entry_type ==\"Subcontracting Received Material\"){\n        var gate = cur_frm.doc.delivery_note;\n        var a = cur_frm.doc.total_qty_delivery_note;\n        \n        var b = cur_frm.doc.total_qty;\n        var c =(a-b)\n        \n        frm.set_value(\"total_pending_qty\",c);\n        frm.refresh_field(\"total_pending_qty\");\n       \n       \n        frappe.db.set_value('Delivery Note',gate, 'pending_qty',c)\n        }\n    }\n});\nfrappe.ui.form.on(\"Stock Entry\",{\n    after_save:function(frm){\n         if(cur_frm.doc.stock_entry_type ==\"Material Received For Supplier\"){\n        var a = cur_frm.doc.received_qty;\n      \n          $.each(frm.doc.items || [], function (i, d)\n            {\n                var b = d.qty;\n                console.log(b);\n                var c=(a - b);\n               \n                d.pending_qty_material_received = c;\n               \n            });\n         }\n    }\n});\nfrappe.ui.form.on(\"Stock Entry\",{\n\tvalidate: function(frm){\n    if(cur_frm.doc.stock_entry_type ==\"Material Transfer For Supplier\" && cur_frm.doc.returnable_or_non_returnable == \"Returnable\"){\n    var a = 0;\n    $.each(frm.doc.items, function(i, d) {\n            a += d.qty;\n    });\n    frm.set_value(\"pending_qty\",a);\n    frm.refresh_field(\"pending_qty\");\n}\n}});\nfrappe.ui.form.on(\"Stock Entry\",{\n    before_submit:function(frm){\n        if(cur_frm.doc.stock_entry_type ==\"Material Received For Supplier\"){\n            \n     \n        var gate = cur_frm.doc.voucher_no;\n        var a = cur_frm.doc.received_qty1;\n        \n        var b = cur_frm.doc.total_qty;\n        var c =(a-b)\n        \n        frm.set_value(\"received_pending_qty\",c);\n        frm.refresh_field(\"received_pending_qty\");\n       \n       \n        frappe.db.set_value('Stock Entry',gate, 'pending_qty',c)\n        }\n    }\n});\nfrappe.ui.form.on('Stock Entry Detail', {\n\titem_code(frm) {\n\t    if(cur_frm.doc.stock_entry_type ==\"Manufacturing Unit-2\" && cur_frm.doc.operation != \"Packing\" ){\n\t    cur_frm.add_fetch('batch_no','batch_qty','qty')\n\t    }\n\t}\n})\nfrappe.ui.form.on('Stock Entry Detail', {\n\titem_code(frm) {\n\t    if(cur_frm.doc.operation == \"Packing\" && cur_frm.doc.stock_entry_type ==\"Manufacturing Unit-2\" ){\n\t         $.each(frm.doc.items || [], function (i, d)\n            {\n                var b = d.actual_qty;\n                console.log(b);\n                d.qty = b;\n                \n                \n            });\n            frm.refresh_field(\"items\");\n\t    }\n\t    \n\t    }\n\t\n})\nfrappe.ui.form.on('Stock Entry Detail', {\n    qty(frm) {\n       \n        if(cur_frm.doc.company_unit_ == \"Unit 2\" && cur_frm.doc.stock_entry_type == \"Manufacturing Unit-2\"){\n            \n     \n        var a = '';\n    $.each(frm.doc.items, function(i, d) {\n        var b = d.s_warehouse;\n            if(b == null){\n                console.log(\"\")\n            }\n            else{\n                a = d.basic_rate;\n                \n            }\n    });\n        $.each(frm.doc.items, function(i, d) {\n        var b = d.s_warehouse;\n            if(b == null){\n                d.basic_rate = a;\n            }\n            else{\n              console.log(\"\")\n                \n            }\n    });\n    console.log(a)\n        frm.refresh_field(\"items\");\n        }\n    }\n});\n\n\n\n\ncur_frm.cscript.onload = function(frm) {\n   \n \n        cur_frm.set_query(\"employee_id\", \"items\", function() {\n            return {\n                \"filters\": {\n                    \n                    \"status\":\"Active\"\n                    \n                    \n                }\n            };\n          });\n}\n\n\n\nfrappe.ui.form.on('Stock Entry Detail', {\n    employee_id: function(frm, cdt, cdn) {\n        var row = locals[cdt][cdn];\n        // check if UOM field has been set before for this item\n        var b = row.employee_id\n        console.log(b)\n         frappe.call({\n    \t        method:\"get_employee_name\",\n    \t        args:{\"employee\":b},\n    \t        }).then(records =>{\n        \t      \n        \t      row.employee_name = records.employee\n        \t      \n    \t        frm.refresh_field(\"items\");\n    \t        })\n    }\n});\n\n\n\n\nfrappe.ui.form.on('Stock Entry Detail', {\n    operator_name: function(frm, cdt, cdn) {\n        var row = locals[cdt][cdn];\n        // check if UOM field has been set before for this item\n        var b = row.operator_name\n        console.log(b)\n         frappe.call({\n    \t        method:\"get_operator_name\",\n    \t        args:{\"operator\":b},\n    \t        }).then(records =>{\n        \t      \n        \t      row.operator_names = records.operator\n        \t      \n    \t        frm.refresh_field(\"items\");\n    \t        })\n    }\n});\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.166070",
  "module": "khetangroup",
  "name": "Sales Invoice Fetch Data Unit-1",
  "script": "frappe.ui.form.on('Sales Invoice Item', {\n\titem_code:function(frm) {\n\t\t// your code here\n\t\tvar item_code = 0;\n\t\tvar rate = 0;\n\t\t$.each(frm.doc.items || {}, function (i, d){\n\t\t      item_code = d.item_code;\n\t\t      //rate = d.rate;\n\t\t      //alert(rate);\n\t\t      frappe.call({\n\t\t          method:\"inches\",\n\t\t          args:{\"item_code\":item_code},\n\t\t            }).then(records => {\n                        var inches = records['msg']\n                        var grade = records['grade']\n                        // var type1 = records['type']\n                        var shape_type = records['shape_type']\n                        var thickness = records['thickness']\n                        var company = records['company']\n                        var default_set = records['default_set']\n                        // var color = records['color']\n                        // console.log(color);\n                        // console.log(inches)\n                        // alert(color);\n                        d.grade = grade;\n                        d.shape_type = shape_type;\n                        d.thickness = thickness;\n                        d.size = inches;\n                        d.company = company;\n                        d.default_set = default_set;\n                        // d.color = color;\n\t\t            });\n\t   });\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.118770",
  "module": "khetangroup",
  "name": "Box Sales Invoice Unit-1",
  "script": "frappe.ui.form.on(\"Sales Invoice Item\", \"qty_box\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    var default_set = d.default_set\n    if (default_set == 15){\n        var inches = d.size;\n        var qty_box=d.qty_box;\n        var total_set = qty_box * default_set;\n        // alert(inches);\n        if (inches<10){\n            // alert(\"This is less than 10\");\n            var a=Number(inches);\n            var add_in = a+2;\n            // alert(add_in)\n            frappe.model.set_value(cdt, cdn, \"special_size\", add_in);\n            // var qty_box=d.qty_box;\n            // var total_set = qty_box * default_set;\n            var total_inches1 = total_set * d.special_size;\n        // alert(total_inches);\n            frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\n            frappe.model.set_value(cdt, cdn, \"qty\", total_set);\n            frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches1);\n        }\n        else{\n            // alert(\"This is more than 10\")\n            // var qty_box=d.qty_box;\n            // var total_set = qty_box * default_set;\n            var total_inches2 = total_set * d.size;\n        // alert(total_inches);\n            frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\n            frappe.model.set_value(cdt, cdn, \"qty\", total_set);\n            frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches2);\n        }\n        \n    }\n    else{\n        alert(\"This is Special Item.\")\n        var qty_box1 = d.qty_box;\n        var total_set1 = qty_box1 * default_set;\n        var total_inches = total_set1 * 1;\n        // alert(total_inches);\n        frappe.model.set_value(cdt, cdn, \"total_set\", total_set1);\n        frappe.model.set_value(cdt, cdn, \"qty\", total_set1);\n        frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches);\n    }\n        \n    // cur_frm.refresh_field(\"Quotation Item\");\n});\nfrappe.ui.form.on(\"Sales Invoice Item\", \"special_size\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    alert(\"This is special size block\");\n    var qty_box=d.qty_box;\n    var default_set = d.default_set\n    var total_set = qty_box * default_set;\n    var total_inches = total_set * d.special_size;\n    // alert(total_inches);\n    // alert(total_set);\n    frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\n    frappe.model.set_value(cdt, cdn, \"qty\", total_set);\n    frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches);\n    if (d.price_list_rate != \"\"){\n        alert(\"hey\")\n        var rate=d.price_amt*d.special_size;\n        frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.106307",
  "module": "khetangroup",
  "name": "Price Amt Sales Invoice Unit-1",
  "script": "frappe.ui.form.on(\"Sales Invoice Item\", \"price_amt\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    var default_set = d.default_set;\n    if (default_set == 15){\n        var inches = d.size;\n        // alert(inches);\n        if (inches<10){\n            // alert(\"This is less than 10\");\n            var rate=d.price_amt*d.special_size;\n            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate);\n        }\n        else{\n            var rate0=d.price_amt * d.size;\n            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate0);\n        }\n        \n    }\n    else{\n        // alert(\"This is Special Item.\");\n        var rate1=d.price_amt;\n        frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate1);\n    }\n    \n    // alert(rate);\n    \n    // frappe.model.set_value(cdt, cdn, \"rate\",d.hi);\n    // cur_frm.refresh_field(\"Quotation Item\");\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"discount_percentage\",function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    var discount = d.discount_percentage;\n    var price_list_rate = d.price_list_rate;\n    var dis_value = price_list_rate-((price_list_rate*discount)/100);\n    // alert(dis_value);\n    var new_value = price_list_rate * d.qty - dis_value * d.qty\n    // alert(new_value);\n    // frappe.model.set_value(cdt, cdn, \"rate\", dis_value);\n    frappe.model.set_value(cdt, cdn, \"discount_amt\", new_value);\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Shift Type",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.311504",
  "module": "khetangroup",
  "name": "Calculate Shifthours",
  "script": "frappe.ui.form.on('Shift Type', {\nstart_time: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.start_time, d.end_time, d.shift_hours);\n\n    if (d.start_time && d.end_time) {\n        \n\t\t\n\t    var hour1 = d.start_time.split(':')[0];\n        var hour2 = d.end_time.split(':')[0];\n        var min1 = d.start_time.split(':')[1];\n        var min2 = d.end_time.split(':')[1];\n\t\tvar sec1 = d.start_time.split(':')[2];\n        var sec2 = d.end_time.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\n        \n       frappe.model.set_value(cdt,cdn,\"shift_hours\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"shift_hours\");\n    }\n},\nend_time: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.start_time, d.end_time, d.shift_hours);\n\n    if (d.start_time && d.end_time) {\n        \n\t\t\n\t    var hour1 = d.start_time.split(':')[0];\n        var hour2 = d.end_time.split(':')[0];\n        var min1 = d.start_time.split(':')[1];\n        var min2 = d.end_time.split(':')[1];\n\t\tvar sec1 = d.start_time.split(':')[2];\n        var sec2 = d.end_time.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\t\n      frappe.model.set_value(cdt,cdn,\"shift_hours\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"shift_hours\");\n    }\n}\n\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.176176",
  "module": "khetangroup",
  "name": "Clear Tax Table in Purchase invoice",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tsupplier:function(frm) {\n\t\tfrm.doc.taxes_and_charges = None;\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.298882",
  "module": "khetangroup",
  "name": "filter apply on bom base on item name in stock entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\titem_name:function(frm) {\n\t    \n        frm.set_query(\"bom_no\", function(doc, cdn,cdt){\n            let d = locals[cdn][cdt];\n            return{\n                filters:{\n                    'item':d.item_name,\n                    'docstatus':1,\n                    'is_active':1,\n                }\n            };\n        });\n\t},\n\t\n\t\n\tcompany:function(frm){\n\t    var company = frm.doc.company;\n\t    \n\t    frm.set_query('item_code', 'items', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t   'is_stock_item': 1,\n\t\t\t  'company': company, \n\t\t\t}\n            };\n\t    });\n\t    frm.set_value(\"items\",0);\n\t    \n\t    frm.set_query(\"operation\", function(doc, cdn,cdt){\n            let d = locals[cdn][cdt];\n            return{\n                filters:{\n                   \n                    'company': company,\n                }\n            }\n        });\n        \n        frm.set_query(\"stock_entry_type\", function(doc, cdn,cdt){\n            let d = locals[cdn][cdt];\n            return{\n                filters:{\n                    \"company_\":frm.doc.company,\n                }\n            }\n        })\n\t    \n\t},\n\toperation:function(frm){\n\t      frm.set_query(\"machine\", function(doc, cdn,cdt){\n            let d = locals[cdn][cdt];\n            return{\n                filters:{\n                   \n                    'operation': frm.doc.operation,\n                }\n            }\n        })\n\t}\n\t\n\t\n});\n\nfrappe.ui.form.on('Stock Entry Detail', {\n\tis_finished__item:function(frm) {\n        $.each(frm.doc.items || [], function(i,d){\n            \n            var finished = d.is_finished__item;\n            if (finished == 1){\n                \n                d.is_scrap_item = 0;\n                d.rejected_item = 0;\n                d.short_length = 0;\n                d.straightner = 0;\n                frm.refresh_field(\"items\");\n            }\n        });\n\t},\n\tis_scrap_item:function(frm){\n\t    $.each(frm.doc.items || [], function(i,d){\n            \n            var scrap  = d.is_scrap_item;\n            if (scrap == 1){\n                d.is_finished__item = 0;\n                d.rejected_item = 0;\n                d.short_length = 0;\n                d.straightner = 0;\n                frm.refresh_field(\"items\");\n            }\n        });\n\t},\n\tshort_length:function(frm){\n\t     $.each(frm.doc.items || [], function(i,d){\n            \n            var short_length  = d.short_length;\n            if (short_length == 1){\n                d.is_finished__item = 0;\n                d.is_scrap_item = 0;\n                d.rejected_item = 0;\n                d.straightner = 0;\n                frm.refresh_field(\"items\");\n            }\n        });\n\t},\n\t\n\trejected_item:function(frm){\n\t    $.each(frm.doc.items || [], function(i,d){\n\t        var rejected = d.rejected_item;\n\t        if(rejected == 1){\n\t            d.is_finished__item = 0;\n\t            d.is_scrap_item = 0;\n\t            d.short_length = 0;\n\t            d.straightner = 0;\n\t            frm.refresh_field(\"items\");\n\t        }\n\t    })\n\t},\n\t\n\tstraightner:function(frm){\n\t    $.each(frm.doc.items || [], function(i,d){\n\t        var straightner = d.straightner;\n\t        if(straightner == 1){\n\t            d.is_finished__item = 0;\n\t            d.is_scrap_item = 0;\n\t            d.short_length = 0;\n\t            d.rejected_item = 0;\n\t            frm.refresh_field(\"items\");\n\t        }\n\t    })\n\t},\n\t\n\t\n\t\n\t\n});\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.188126",
  "module": "khetangroup",
  "name": "Remove Add Multiple",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n// \t\t$(\".grid-add-multiple-rows\").hide();\n        $(\".grid-add-multiple-rows\").remove();\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.198659",
  "module": "khetangroup",
  "name": "Master Data Fetch From Bluster and Pillar",
  "script": "frappe.ui.form.on('Quotation', {\n\tselect_item_type: function(frm) {\n\t    var a = frm.doc.select_item_type;\n\t    if (a==\"Blustor And Pillar\"){\n\t       // frm.set_value(\"rbgm65202\", 12);\n\t       // alert(a);\n\t       // frappe.call({\n\t       //    // frappe.db.get_all \n        //     method: 'frappe.client.get_value',\n        //     args: {\n        //         'doctype': 'Item Type',\n        //         'fieldname': \"master_price\"\n        //     },\n        //     callback: function(r) {\n               \n        //             console.log(r);\n        //             // frm.set_value('inquiry_connect', r.message.inquiry_connect);\n        //             // alert(frm.doc.inquiry_connect)\n        //             // frm.refresh_field(\"your_seed_license_code\");\n                  \n        //         }\n        //     });\n    \n\t        frappe.call({\n\t\t          method:\"bluster_price\",\n\t\t            }).then(records => {\n\t\t                \n                    frm.set_value(\"mpillar11202\", records.mpillar11202);\n                    frm.set_df_property(\"mpillar11202\", \"read_only\",1);\n                    frm.set_value(\"mpillar13202\", records.mpillar13202);\n                    frm.set_df_property(\"mpillar13202\", \"read_only\",1);\n                    frm.set_value(\"mpillar15202\", records.mpillar15202);\n                    frm.set_df_property(\"mpillar15202\", \"read_only\",1);\n                    frm.set_value(\"mpillar17202\", records.mpillar17202);\n                    frm.set_df_property(\"mpillar17202\", \"read_only\",1);\n                    frm.set_value(\"mpillar22202\", records.mpillar22202);\n                    frm.set_df_property(\"mpillar22202\", \"read_only\",1);\n                    \n                    frm.set_value(\"mpillar11304\", records.mpillar11304);\n                    frm.set_df_property(\"mpillar11304\", \"read_only\",1);\n                    frm.set_value(\"mpillar13304\", records.mpillar13304);\n                    frm.set_df_property(\"mpillar13304\", \"read_only\",1);\n                    frm.set_value(\"mpillar15304\", records.mpillar15304);\n                    frm.set_df_property(\"mpillar15304\", \"read_only\",1);\n                    frm.set_value(\"mpillar17304\", records.mpillar17304);\n                    frm.set_df_property(\"mpillar17304\", \"read_only\",1);\n                    frm.set_value(\"mpillar22304\", records.mpillar22304);\n                    frm.set_df_property(\"mpillar22304\", \"read_only\",1);\n                    \n                    frm.set_value(\"rbgm55202\", records.rbgm55202);\n                    frm.set_df_property(\"rbgm55202\", \"read_only\",1);\n                    frm.set_value(\"rbgm65202\", records.rbgm65202);\n                    frm.set_value(\"rbgm70202\", records.rbgm70202);\n                    frm.set_df_property(\"rbgm70202\", \"read_only\",1);\n                    frm.set_value(\"rbgm90202\", records.rbgm90202);\n                    frm.set_df_property(\"rbgm90202\", \"read_only\",1);\n                    frm.set_value(\"rbgm110202\", records.rbgm110202);\n                    frm.set_df_property(\"rbgm110202\", \"read_only\",1);\n                    \n                    frm.set_value(\"rbgm55304\", records.rbgm55304);\n                    frm.set_df_property(\"rbgm55304\", \"read_only\",1);\n                    frm.set_value(\"rbgm65304\", records.rbgm65304);\n                    frm.set_value(\"rbgm70304\", records.rbgm70304);\n                    frm.set_df_property(\"rbgm70304\", \"read_only\",1);\n                    frm.set_value(\"rbgm90304\", records.rbgm90304);\n                    frm.set_df_property(\"rbgm90304\", \"read_only\",1);\n                    frm.set_value(\"rbgm110304\", records.rbgm110304);\n                    frm.set_df_property(\"rbgm110304\", \"read_only\",1);\n                    \n                    frm.set_value(\"sqbgm70202\", records.sqbgm70202);\n                    frm.set_df_property(\"sqbgm70202\", \"read_only\",1);\n                    frm.set_value(\"sqbgm65202\", records.sqbgm65202);\n                    frm.set_value(\"sqbgm90202\", records.sqbgm90202);\n                    frm.set_df_property(\"sqbgm90202\", \"read_only\",1);\n                    frm.set_value(\"sqbgm110202\", records.sqbgm110202);\n                    \n                    frm.set_value(\"sqbgm70304\", records.sqbgm70304);\n                    frm.set_df_property(\"sqbgm70304\", \"read_only\",1);\n                    frm.set_value(\"sqbgm65304\", records.sqbgm65304);\n                    frm.set_value(\"sqbgm90304\", records.sqbgm90304);\n                    frm.set_df_property(\"sqbgm90304\", \"read_only\",1);\n                    frm.set_value(\"sqbgm110304\", records.sqbgm110304);\n                    frm.set_df_property(\"sqbgm110304\", \"read_only\",1);\n\t\t      });\n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.238449",
  "module": "khetangroup",
  "name": "Naming Series For Expense Bill",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\t\tonload(frm) {\n            if (frm.doc.purchase_or_expense == 'Expense Bill'){\n                frm.set_value('naming_series','EXP-.MM.-.YY.-');\n            }\n            else\n            {\n                frm.set_value('naming_series','PINV-.YY.-');\n            }\n\t    },\n\t    purchase_or_expense(frm) {\n            if (frm.doc.purchase_or_expense == 'Expense Bill'){\n                frm.set_value('naming_series','EXP-.MM.-.YY.-');\n            }\n            else\n            {\n                frm.set_value('naming_series','PINV-.YY.-');\n            }\n\t    }\n});\nfrappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\tfrm.set_query(\"gatepass_no\",function(){\n\t    return{\n\t        filters:{\n\t            \n\t            'purpose':\"Purchase Inward\"\n\t        }\n\t        \n\t    };\n\t});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.212595",
  "module": "khetangroup",
  "name": "Delivery Note Pending Qty",
  "script": "frappe.ui.form.on(\"Delivery Note\",{\n\tvalidate: function(frm)\n{\n    var a = 0;\n    $.each(frm.doc.items, function(i, d) {\n            a += d.qty;\n    });\n    frm.set_value(\"pending_qty\",a);\n    frm.refresh_field(\"pending_qty\");\n\n}});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.397474",
  "module": "khetangroup",
  "name": "Total Weight Process loss Calculate",
  "script": "\nfrappe.ui.form.on('Stock Entry Detail', {\n\tqty:function(frm) {\n\t   \n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    var qty = d.qty;\n\t\t    var p_u_w = d.weight_per_unit;\n\t\t    var total_w = qty * p_u_w;\n\t\t     d.total_weight = total_w;\n\t\t     frm.refresh_field(\"items\")\n\t\t})\n\t\t\n\t\tvar type = frm.doc.stock_entry_type;\n\t\tif(type == \"Manufacturing\" || type == \"Manufacturing Unit-2\")\n\t\t{\n        \t\tvar r_weigth = 0;\n        \t\tvar f_s_w = 0;\n        \t\t\n        \t\t$.each(frm.doc.items || [], function(i,d){\n        \t\t    \n        \t\t    if(d.s_warehouse == undefined)\n        \t\t    {\n        \t\t        var r = d.total_weight;\n        \t\t        f_s_w +=  r; \n        \t\t        \n        \t\t    }\n        \t\t    else{\n        \t\t       var h = d.total_weight;\n        \t\t        r_weigth += h; \n        \t\t    }\n        \t\t})\n        \t\tvar a = r_weigth - f_s_w;\n        \t\tvar process_loss_p = (a/r_weigth)*100;\n        \t\tfrm.set_value(\"process_loss\",process_loss_p);\n        \t\tfrm.refresh_field(\"process_loss\");\n        \t\tfrm.set_value('raw_material_weight',r_weigth);\n        \t\tfrm.refresh_field(\"raw_material_weight\");\n       \t        frm.set_value('total_weight_out_put',f_s_w);\n        \t\tfrm.refresh_field(\"total_weight_out_put\");\n        \t\t frm.refresh_field(\"items\");\n\t\t}\n\t\telse if(type == \"Material Transfer\")\n\t\t{\n\t\t    var total_w = 0;\n\t\t    \n\t\t    $.each(frm.doc.items || [], function(i,d){\n\t\t        var r = parseFloat(d.total_weight);\n        \t\t total_w +=  r; \n\t\t    });\n\t\t    frm.set_value(\"total_weight\",total_w);\n\t\t    frm.refresh_field(\"total_weight\");\n\t\t}\n        \t\n\t},\n\n\n\n})\nfrappe.ui.form.on('Stock Entry', {\n\tbefore_save:function(frm) {\n\t   \n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    var qty = d.qty;\n\t\t    var p_u_w = d.weight_per_unit;\n\t\t    var total_w = qty * p_u_w;\n\t\t     d.total_weight = total_w;\n\t\t     frm.refresh_field(\"items\")\n\t\t})\n\t\n\t\t\n\t\tvar type = frm.doc.stock_entry_type;\n\t\tif(type == \"Manufacturing\" || type == \"Manufacturing Unit-2\")\n\t\t{\n        \t\tvar r_weigth = 0;\n        \t\tvar f_s_w = 0;\n        \t\t\n        \t\t$.each(frm.doc.items || [], function(i,d){\n        \t\t    \n        \t\t    if(d.s_warehouse == undefined)\n        \t\t    {\n        \t\t        var r = d.total_weight;\n        \t\t        f_s_w +=  r; \n        \t\t        \n        \t\t    }\n        \t\t    else{\n        \t\t       var h = d.total_weight;\n        \t\t        r_weigth += h; \n        \t\t    }\n        \t\t})\n        \t\tvar a = r_weigth - f_s_w;\n        \t\tvar process_loss_p = (a/r_weigth)*100;\n        \t\tfrm.set_value(\"process_loss\",process_loss_p);\n        \t\tfrm.refresh_field(\"process_loss\");\n        \t\tfrm.set_value('raw_material_weight',r_weigth);\n        \t\tfrm.refresh_field(\"raw_material_weight\");\n       \t        frm.set_value('total_weight_out_put',f_s_w);\n        \t\tfrm.refresh_field(\"total_weight_out_put\");\n        \t\t frm.refresh_field(\"items\");\n\t\t}\n\t\telse if(type == \"Material Transfer\")\n\t\t{\n\t\t    var total_w = 0;\n\t\t    \n\t\t    $.each(frm.doc.items || [], function(i,d){\n\t\t        var r = parseFloat(d.total_weight);\n        \t\t total_w +=  r; \n\t\t    });\n\t\t    frm.set_value(\"total_weight\",total_w);\n\t\t    frm.refresh_field(\"total_weight\");\n\t\t}\n        \t\n\t},\n\n\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.222927",
  "module": "khetangroup",
  "name": "Supplier name concatenate",
  "script": "frappe.ui.form.on('Supplier', {\n\tsupplier_name:function(frm) {\n\t    \n\t    var name = frm.doc.supplier_name;\n\t    var com  = frm.doc.company;\n\t   \n\t    var con = name + \"-\" + com;\n\t \n\t    frm.set_value(\"supplier_name_custom\", con);\n\t    \n\t},\n\t\n\tcompany:function(frm){\n\t    var name = frm.doc.supplier_name;\n\t    var com  = frm.doc.company;\n\t   \n\t    var con = name + \"-\" + com;\n\t \n\t    frm.set_value(\"supplier_name_custom\", con);\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "GatePass",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.249512",
  "module": "khetangroup",
  "name": "GatePass",
  "script": "frappe.ui.form.on('GatePass', {\n\tpurchase_invoice:function(frm) {\n\t    \n\t\tvar u = frm.doc.purchase_invoice;\n\t\n\t    frappe.call({\n\t        method:\"purchase_invoice\",\n\t        args:{\"no\":u},\n\t    }).then(records =>{\n\t        var item = records[\"item\"];\n\t       \n\t        var item_code = item.split(\",\");\n\t        var len = item_code.length;\n\n\t        var qty = records[\"qty\"];\n\t        var qty1 = qty.split(\",\");\n\n\t       var child = frm.doc.purchase_inward_table;\n\t        \n\t        if(child === undefined)\n\t       \n\t         {\n\t            for(var a = 0;a < len; a++){\n\t             \n\t                   var row = frappe.model.add_child(cur_frm.doc, \"GatePass\", \"purchase_inward_table\");\n                \t         row.item_name = item_code[a];\n                \t         row.qty = qty1[a];\n                \t        \n                \t         frm.refresh_fields(\"purchase_inward_table\");\n\t              }\n\t         }\n\t    });\n\t  \n}\n  \n});\nfrappe.ui.form.on('GatePass', {\n\tsales_invoice:function(frm) {\n\t    \n\t\tvar invoice = frm.doc.sales_invoice;\n\t\n\t    frappe.call({\n\t        method:\"sales_invoice\",\n\t        args:{\"no\":invoice},\n\t    }).then(records =>{\n\t        var item = records[\"item\"];\n\t       \n\t        var item_code = item.split(\",\");\n\t       var len = item_code.length;\n\n\t        var qty = records[\"qty\"];\n\t         var qty1 = qty.split(\",\");\n\n\t       \n\t         var child = frm.doc.purchase_inward_table;\n\t        \n\t        if(child === undefined)\n\t       \n\t         {\n\t            for(var a = 0;a < len; a++){\n\t             \n\t                   var row = frappe.model.add_child(cur_frm.doc, \"GatePass\", \"purchase_inward_table\");\n                \t         row.item_name = item_code[a];\n                \t         row.qty = qty1[a];\n                \t        \n                \t         frm.refresh_fields(\"purchase_inward_table\");\n\t              }\n\t         }\n\t    });\n\t  \n}\n  \n});\n\nfrappe.ui.form.on('GatePass', {\n\tpurpose:function(frm) {\n\t    if(frm.doc.purpose == \"Returnable Received Material\")\n         {\n   \t     frm.set_query(\"voucher_no\",function(){\n\t     return{\n\t        filters:{\n\t            \n\t            'stock_entry_type':\"Material Transfer For Supplier\"\n\t            \n\t        }\n\t        \n\t    };\n\t});\n         }\n          \n         \n\t}\n});\n\nfrappe.ui.form.on('GatePass',{\n    voucher_no:function(frm){\n        \n        var voucher = frm.doc.voucher_no;\n        \n        frappe.call({\n            method:\"voucher_num\",\n            args:{\"no\":voucher},\n        }).then(records =>{\n            var item = records[\"item\"];\n            \n            var item_code = item.split(\",\");\n            var len = item_code.length;\n           \n            var qty = records[\"qty\"]\n            var qty1 = qty.split(\",\")\n            \n           \n             var child = frm.doc.purchase_inward_table;\n\t        \n\t        if(child === undefined)\n\t       \n\t         {\n\t            for(var a = 0;a < len; a++){\n\t             \n\t                   var row = frappe.model.add_child(cur_frm.doc, \"GatePass\", \"purchase_inward_table\");\n\t                        row.item_name = item_code[a];\n\t                        row.qty = qty1[a];\n\t                       \n\t                        frm.refresh_fields(\"purchase_inward_table\")\n            \n\t            }\n\t         }\n            \n        })\n    }\n})\nfrappe.ui.form.on(\"GatePass\",{\n    purpose:function(frm) {\n\t    if(frm.doc.purpose == \"Purchase Return\")\n         {\n   \t     frm.set_query(\"purchase_invoice\",function(){\n\t     return{\n\t        filters:{\n\t            \n\t            'is_return':1\n\t        }\n\t        \n\t    };\n\t});\n    }\n    }\n})\n\nfrappe.ui.form.on('GatePass', {\n\tpurpose:function(frm) {\n\t     if(frm.doc.purpose == \"Returnable Or Non Returnable Transfer Material\")\n         {\n   \t     frm.set_query(\"voucher_no\",function(){\n\t     return{\n\t        filters:{\n\t            \n\t            'stock_entry_type':\"Material Transfer For Company\",\n\t            'returnable_or_non_returnable':[\"in\", [ \"Non Returnable\"]] \n\t        }\n\t        \n\t    };\n\t});\n         }\n         \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.443808",
  "module": "khetangroup",
  "name": "Warehouse Filter in Sales Invoice",
  "script": "cur_frm.cscript.company = function(frm) {\n    var company=cur_frm.doc.company_unit;\n    // console.log(company);\n    if (company==\"Unit 1\"){\n        cur_frm.set_query(\"set_warehouse\", function() {\n            return {\n                \"filters\": {\n                    \"company\":cur_frm.doc.company,\n                    \"parent_warehouse\":\"All Warehouses - KG\",\n                    \"name\": [\"in\", [\"Finished Goods - KG\", \"Stores - KG\"]]\n                }\n            };\n          });\n    }\n    else if(company==\"Unit 2\"){\n        cur_frm.set_query(\"set_warehouse\", function() {\n            return {\n                \"filters\": {\n                    \"company\":cur_frm.doc.company,\n                    \"parent_warehouse\":\"All Warehouses - SU2\",\n                    \"name\": [\"in\",[\"Finished Goods - SU2\", \"Stores - SU2\"]]\n                }\n            };\n          });\n    }\n    else{\n        cur_frm.set_query(\"set_warehouse\", function() {\n            return {\n                \"filters\": {\n                    \"company\":cur_frm.doc.company,\n                    \"parent_warehouse\":\"All Warehouses - SU3\",\n                    \"name\": [\"in\",[\"Finished Goods - SU3\", \"Stores - SU3\"]]\n                }\n            };\n          });\n    }\n        \n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.264711",
  "module": "khetangroup",
  "name": "Total Discount Amount",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tbefore_save(frm) {\n\t\t// your code here\n\t\tvar n=0;\n\t    var c=0;\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t   var a = d.price_list_rate * d.qty;\n\t\t   var b = d.rate * d.qty;\n\t\t   c = a-b;\n\t\t   d.discount_amount_12 = c;\n\t\t  // console.log(c)\n\t\t   n=n+c;\n\t\t  // console.log(n)\n\t\t});\n// \t\talert(\"This is the main working of the number\")\n// \t\talert(n)\n\t\tfrm.set_value(\"total_discount_amount\",n);\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.276433",
  "module": "khetangroup",
  "name": "Set Payroll type in Salary structure",
  "script": "frappe.ui.form.on('Salary Structure', {\n\tafter_save:function(frm) {\n\t\tvar pay_type = frm.doc.salary_slip_based_on_timesheet;\n\t\t\n\t\tif(pay_type == 1)\n\t\t{\n\t\t    frm.set_value('payroll_type', 'Hourwise');\n\t\t    frm.save();\n\t\t}\n\t\telse\n\t\t{\n\t\t    frm.set_value('payroll_type', 'Nothourwise');\n\t\t    frm.save();\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Warehouse",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.288098",
  "module": "khetangroup",
  "name": "only one check box tick",
  "script": "frappe.ui.form.on('Warehouse', {\n\tis_finished__item:function(frm) {\n       var finished  = frm.doc.is_finished__item;\n        if (finished == 1){\n            frm.set_value(\"short_length\", 0);\n            frm.set_value(\"is_scrap_item\", 0);\n            frm.set_value(\"rejected_item\", 0);\n            frm.set_value(\"straightner\", 0);\n        }\n\t},\n\tis_scrap_item:function(frm){\n\t    var scrap  = frm.doc.is_scrap_item;\n        if (scrap == 1){\n            frm.set_value(\"short_length\", 0);\n            frm.set_value(\"is_finished__item\", 0);\n            frm.set_value(\"rejected_item\", 0);\n            frm.set_value(\"straightner\", 0);\n        }\n       \n\t},\n\tshort_length:function(frm){\n        var short  = frm.doc.short_length;\n        if (short == 1){\n            frm.set_value(\"is_finished__item\", 0);\n            frm.set_value(\"is_scrap_item\", 0);\n            frm.set_value(\"rejected_item\", 0);\n            frm.set_value(\"straightner\", 0);\n        }\n\t},\n\t\n\trejected_item:function(frm){\n\t    var rejected  = frm.doc.rejected_item;\n        if (rejected == 1){\n            frm.set_value(\"short_length\", 0);\n            frm.set_value(\"is_finished__item\", 0);\n            frm.set_value(\"is_scrap_item\", 0);\n            frm.set_value(\"straightner\", 0);\n        }\n\t   \n\t},\n\tstraightner:function(frm){\n\t    var straightner  = frm.doc.straightner;\n        if (straightner == 1){\n            frm.set_value(\"short_length\", 0);\n            frm.set_value(\"is_finished__item\", 0);\n            frm.set_value(\"is_scrap_item\", 0);\n            frm.set_value(\"rejected_item\", 0);\n        }\n\t   \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.324153",
  "module": "khetangroup",
  "name": "Calculation of hour wise rate",
  "script": "frappe.ui.form.on('Salary Structure', {\n\tdaily_rate: function(frm) {\n\t\tvar Daily_rate = frm.doc.daily_rate;\n\t\tvar Hours = frm.doc.standard_hours_per_day;\n\t\tvar Hour_wise_rate = Daily_rate/Hours;\n\t\tfrm.set_value('hour_rate', Hour_wise_rate);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.335286",
  "module": "khetangroup",
  "name": "Set default company for stock entry",
  "script": "frappe.ui.form.on('Item', {\n\tcompany:function(frm) {\n\n\t   \n\t   var company = frm.doc.company;\n    // \t $.each(frm.doc.item_defaults || [], function(i,d){\n    //         d.company = company;\n    //         frm.refresh();\n    // \t });\n       frm.clear_table(\"item_defaults\");\n       var row = frm.add_child(\"item_defaults\");\n\t   row.company = company;\n\t   frm.refresh_field(\"item_defaults\");\n\t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Card Attendance",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.344512",
  "module": "khetangroup",
  "name": "Status Indicator for Card Attendance",
  "script": "frappe.listview_settings['Card Attendance'] = {\radd_fields: [ \"card_status\"],\rget_indicator:function(doc){\rif (doc.card_status === 'Present')\r{\r\treturn [__(\"Present\"), \"green\", \"card_status,=,Present\"];\r}\rif(doc.card_status == 'Absent')\r{\r    return [__(\"Absent\"), \"red\", \"card_status,=,Absent\"];\r}\rif(doc.card_status == 'Half Day')\r{\r    return [__(\"Half Day\"), \"orange\", \"card_status,=,Half Day\"];\r}\rif(doc.card_status == 'On Leave')\r{\r    return [__(\"On Leave\"), \"red\", \"card_status,=,On Leave\"];\r}\rif(doc.card_status == 'Work From Home')\r{\r    return [__(\"Work From Home\"), \"red\", \"card_status,=,Work From Home\"];\r}\r }\r};\r",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.367123",
  "module": "khetangroup",
  "name": "Enter Key",
  "script": "frappe.ui.form.ControlInt.prototype.validate = function validate(value){return value}\n\n$(document).keydown(function(event){\n    $(\".grid-form-heading, .grid-footer-toolbar\").remove()\n    var keycode = (event.keyCode ? event.keyCode : event.which);\n    var grid_length = $(event.target).parents('.grid-body').length\n    if(grid_length!==0 && keycode===13){\n        let child_table_name = $(event.target).parents('[data-fieldtype=\"Table\"]').attr('data-fieldname')\n        var curr_field = $(event.target).attr('data-fieldname');\n        var curr_div = $(event.target).parents('.grid-row').next().find(`div[data-fieldname=${curr_field}`)\n        if(curr_div.length===0){\n            $(event.target).change();\n            let curr_idx = add_new_row(child_table_name)\n            add_cusor_on_new_row(curr_idx,child_table_name,curr_field)\n        }else{\n            $(curr_div).click()\n//             setTimeout(function () {\n// \t\t\t\tcurr_div.find(`input[data-fieldname='${curr_field}']`).select();\n// \t\t\t}, 300);\n        }\n        \n        \n    }\n});\n\n\n// $(document).keyup(function(event){\n//     var keycode = (event.keyCode ? event.keyCode : event.which);\n//     var grid_length = $(event.target).parents('.grid-body').length\n//     if(grid_length!==0){\n//         if([40,38].includes(keycode)){\n//     //         setTimeout(function () {\n//     // \t\t\t $(event.target).select();\n//     // \t\t}, 300);\n//         }\n//     }\n// });\n\nfunction add_new_row(child_table_name){\n    let new_item = cur_frm.add_child(child_table_name);\n    let curr_idx = new_item.idx-1\n    cur_frm.refresh_field(child_table_name);\n    return curr_idx\n}\n\nfunction add_cusor_on_new_row(input_index,child_table_name,field_name){\n    var child_table_field = cur_frm.get_field(child_table_name);\n    var table_body = child_table_field.$wrapper.find(\".grid-body\");\n    var row = table_body.find(\".grid-row\")[input_index]\n    var field_to_click = $(row).find(`[data-fieldname='${field_name}']`);\n    field_to_click.trigger(\"click\");\n//     setTimeout(function () {\n// \t\tfield_to_click.find(`input[data-fieldname='${field_name}']`).select();\n// \t}, 300);\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.462718",
  "module": "khetangroup",
  "name": "New Rates Applied in gauge and bluster",
  "script": "frappe.ui.form.on('Quotation', {\r    rate202:function(frm, cdt, cdn) {\r        items_update_rate('rate202',cdt,cdn,\"Pipe 202\")\r\t},\r\trate304:function(frm, cdt, cdn) {\r        items_update_rate('rate304',cdt,cdn,\"Pipe 304\")\r\t},\r\trate316:function(frm, cdt, cdn) {\r        items_update_rate('rate316',cdt,cdn,\"Pipe 316\")\r\t},\r\tsheet202:function(frm, cdt, cdn) {\r        items_update_rate('sheet202',cdt,cdn,\"Sheet 202\")\r\t},\r\tsheet304:function(frm, cdt, cdn) {\r        items_update_rate('sheet304',cdt,cdn,\"Sheet 304\")\r\t},\r\trbgm65202:function(frm, cdt, cdn) {\r        blustor_items_update_rate('rbgm65202',cdt,cdn,\"650 Grm R Blustor 202\")\r\t},\r\tsqbgm65202:function(frm, cdt, cdn) {\r        blustor_items_update_rate('sqbgm65202',cdt,cdn,\"800 Grm Sq Blustor 202\")\r\t},\r\tsqbgm110202:function(frm, cdt, cdn) {\r        blustor_items_update_rate('sqbgm110202',cdt,cdn,\"1100 Grm R Blustor 202\")\r\t},\r\tsqbgm65304:function(frm, cdt, cdn) {\r        blustor_items_update_rate('sqbgm65304',cdt,cdn,\"650 Grm R Blustor 304\")\r\t},\r\trbgm65304:function(frm, cdt, cdn) {\r        blustor_items_update_rate('rbgm65304',cdt,cdn,\"800 Grm Sq Blustor 304\")\r\t},\r\tbefore_submit:function(frm, cdt, cdn) {\r\t    if(frm.doc.company_unit === \"Unit 2\" && frm.doc.items.filter(item => item.pcs === 0).length!==0){\r\t        frappe.validated = false;\r            msgprint(\"Item pcs can not be zero!\")\r\t    }\r    }\r});\r\r\rfunction items_update_rate(rate_field,cdt,cdn,item_type){\r    let curr_doc = locals[cdt][cdn]\r    let new_rate = curr_doc[rate_field]\r    let update_items = cur_frm.doc.items.filter(item => item.item_type===item_type)\r    update_items.forEach(function(item){\r        if(item.pcs!==0){\r            let new_rate_with_margin = new_rate + 0\r            if(cur_frm.doc.customer_type==='Special'){\r                new_rate_with_margin = new_rate + item.special_margin\r            }else if (cur_frm.doc.customer_type==='General'){\r                new_rate_with_margin = new_rate + item.normal_margin\r            }\r            let price_list_rate = (new_rate_with_margin * item.weight)/item.pcs\r            \r            frappe.model.set_value('Quotation Item', item.name, \"estimated_amount\", new_rate_with_margin * item.weight);\r            frappe.model.set_value('Quotation Item', item.name, \"rate1\", new_rate_with_margin);\r            frappe.model.set_value('Quotation Item', item.name, \"price_list_rate\", price_list_rate);\r            frappe.model.set_value('Quotation Item', item.name, \"rate\", price_list_rate);\r        }\r    })\r}\r\rfunction blustor_items_update_rate(rate_field,cdt,cdn,item_type){\r    let curr_doc = locals[cdt][cdn]\r    let new_rate = curr_doc[rate_field]\r    let update_items = cur_frm.doc.items.filter(item => (item.item_type===item_type))\r    update_items.forEach(function(item){\r        if(item.pcs!==0){\r            let price_list_rate = new_rate \r            frappe.model.set_value('Quotation Item', item.name, \"estimated_amount\", new_rate * item.pcs);\r            frappe.model.set_value('Quotation Item', item.name, \"rate1\", new_rate);\r            frappe.model.set_value('Quotation Item', item.name, \"price_list_rate\", price_list_rate);\r            frappe.model.set_value('Quotation Item', item.name, \"rate\", price_list_rate);\r        }\r    })\r}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.357090",
  "module": "khetangroup",
  "name": "Item Code selection Unit-2",
  "script": "frappe.ui.form.on(\"Quotation Item\", \"item_c\",function(frm, cdt, cdn){\r    var d = locals[cdt][cdn];\r    var item_c= d.item_c\r// \tconsole.log(item_c)\r\tfrappe.model.set_value(cdt, cdn, \"item_code\", item_c); \r});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.453723",
  "module": "khetangroup",
  "name": "Reports of Pipe And Sheet Unit-2",
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_save(frm) {\n\t    var name  = frm.doc.name;\n\t    var qty = 0;\n\t    var n=0;\n\t    var n1=0;\n\t    var n2=0;\n\t    var m=0;\n\t    var m1=0;\n\t    var m2=0;\n\t    var z=0;\n\t    var z1=0;\n\t    var z2=0;\n\t    var w=0;\n\t    var w1=0;\n\t    var w2=0;\n\t    var q=0;\n\t    var q1=0;\n\t    var q2=0;\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t \n\t\t   var a = d.item_type;\n\t\t   var item_main =  d.item_main;\n\t\t   var grade = d.grade;\n\t\t  // alert(item_main)\n\t\t  // alert(grade)\n\t\t   if (d.item_202==1 && d.blustor==1){\n\t\t      // alert(\"hello blustor\")\n\t\t        n =  d.pcs+n;\n\t\t        n1= d.weight+n1;\n\t\t        n2= d.amount+n2;\n\t\t    }\n\t\t    else if (d.item_304==1 && d.blustor==1){\n\t\t        z= d.pcs+z;\n    \t\t    z1 = d.weight+z1;\n    \t\t    z2 = d.amount+z2;\n\t\t    }\n\t\t    else if (d.item_202==1 && d.pillar==1){\n\t\t        w = d.pcs+w;\n    \t\t    w1 = d.weight+w1;\n    \t\t    w2 = d.amount+w2;\n\t\t    }\n\t\t    else if (d.item_304==1 && d.pillar==1){\n\t\t        q = d.pcs+q;\n    \t\t    q1 = d.weight+q1;\n    \t\t    q2 = d.amount+q2;\n\t\t    }\n\t\t    else if (d.pipe==1 ||d.sheet==1){\n\t\t        if(d.pipe == 1 && d.item_202 == 1){\n\t\t        n =  d.pcs+n;\n\t\t        n1= d.weight+n1;\n\t\t        n2= d.amount+n2;\n\t\t      //  alert(n1);\n\t\t        }\n\t\t    \n    \t\t    else if(d.pipe == 1 && d.item_316 == 1){\n    \t\t        m = d.pcs+m;\n    \t\t        m1 = d.weight+m1;\n    \t\t        m2 = d.amount+m2;\n    \t\t      //  alert(m);\n    \t\t    }\n    \t\t     else if(d.pipe == 1 && d.item_304 == 1){\n    \t\t         z= d.pcs+z;\n    \t\t         z1 = d.weight+z1;\n    \t\t         z2 = d.amount+z2;\n    \t\t      //   alert(z);\n    \t\t    }\n    \t\t    else if (d.sheet == 1 && d.item_202 == 1){\n    \t\t        w = d.pcs+w;\n    \t\t        w1 = d.weight+w1;\n    \t\t        w2 = d.amount+w2;\n    \t\t    }\n    \t\t    else if (d.sheet == 1 && d.item_304 == 1){\n    \t\t        q = d.pcs+q;\n    \t\t        q1 = d.weight+q1;\n    \t\t        q2 = d.amount+q2;\n    \t\t    }\n\t\t    }\n\n\t\t    \n\t\t    \n\t\t    \n\t\t});\n// \t\talert(\"Hello this is Pipe 202:   \"+n);\n// \t\talert(\"Hello this is Pipe 202 Actual Weight:   \"+n1);\n// \t\talert(\"Hello this is Pipe 202 Total Amount:   \"+n2);\n\t\t\n\t\tfrm.set_value(\"pipe_202_pcs\",n);\n\t\tfrm.set_value(\"pipe_202_actual_w\",n1);\n\t\tfrm.set_value(\"pipe_202_total_amount\",n2);\n\t\t\n\t\tfrm.set_value(\"pipe_316_pcs\",m);\n\t\tfrm.set_value(\"pipe_316_actual_w\",m1);\n\t\tfrm.set_value(\"pipe_316_total_amount\",m2);\n\t\t\n\t\tfrm.set_value(\"pipe_304_pcs\",z);\n\t\tfrm.set_value(\"pipe_304_actual_w\",z1);\n\t\tfrm.set_value(\"pipe_304_total_amount\",z2);\n\t\t\n\t\tfrm.set_value(\"sheet_202_pcs\",w);\n\t\tfrm.set_value(\"sheet_202_actual_w\",w1);\n\t\tfrm.set_value(\"sheet_202_total_amount\",w2);\n\t\t\n\t\tfrm.set_value(\"sheet_304_pcs\",q);\n\t\tfrm.set_value(\"sheet_304_actual_w\",q1);\n\t\tfrm.set_value(\"sheet_304_total_amount\",q2);\n// \t\talert(\"Hello this is Pipe 316:   \"+m);\n// \t\talert(\"Hello this is Pipe 304:   \"+z);\n\t\t// your code here\n\t},\n// \tcompany:function(frm) {\n// \t    if(cur_frm.doc.company ==\"SANTOSH UNIT 2\"){\n// \t        frm.set_query(\"item_code\",\"items\",function(){\n// \t            return{\n// \t                filters:{\n\n// \t                    'item_group':\"Products\",\n// \t                    'is_sales_item':1\t           \n// \t                }\t        \n// \t            };\n//             });\n// \t    }\n//     }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.424464",
  "module": "khetangroup",
  "name": "Linked Employee ID field to Employee Number",
  "script": "frappe.ui.form.on('Employee', {\n\tbefore_save(frm) {\n\t\tvar emp = frm.doc.employee;\n\t\t\n\t\tif(frm.doc.status == \"Active\")\n\t\t{\n\t\t    frm.set_value('employee_number', emp);\n\t\t    frm.set_value('attendance_device_id', emp);\n\t\t    frm.refresh_field('employee_number');\n\t\t    frm.refresh_field('attendance_device_id');\n\t\t}\n\t\t\n\t},\n\tstatus(frm){\n\t    if(frm.doc.status == \"Inactive\")\n\t\t{\n\t\t    frm.set_value('employee_number', \"\");\n\t\t    frm.set_value('attendance_device_id', \"\");\n\t\t    frm.refresh_field('employee_number');\n\t\t    frm.refresh_field('attendance_device_id');\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bulk Payment",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.481887",
  "module": "khetangroup",
  "name": "Bulk Payment of Employees",
  "script": "frappe.ui.form.on('Bulk Payment', {\n    refresh(frm) {\n\t\tset_css(frm); \n\t},\n\tdepartment:function(frm){\n\t    var a = ''\n\t     frappe.call({\n    \t        method:\"bulk_payment_method\",\n    \t        args:{\"name\":cur_frm.doc.department},\n    \t        }).then(records =>{\n    \t            frm.set_value(\"company_unit\",records.company_units)\n    \t            frm.set_value(\"labour\",records.labours)\n    \t        })\n\t},\n\tget_data(frm) {\n\t    document.querySelectorAll(\"[data-fieldname = 'get_data']\")[1].style.backgroundColor = '#B0DAFF';\n\t    if(!frm.script_executed){\n\t        \n\t        var depart = frm.doc.department;\n    \t\tvar f_date = frm.doc.from_date;\n            var t_date = frm.doc.to_date;\n            var Std_Hours = frm.doc.standard_hours;\n            \n            if(cur_frm.doc.labour==1 && cur_frm.doc.company_unit == \"Unit 2\"){\n              \n               \n                frappe.db.get_list('Employee',{\n                fields:['employee','employee_name', 'daily_rate'],\n                filters:{\n                    department:depart,\n                    status:\"Active\"\n                },\n                limit:500,\n                page_length:20\n                }).then(result=>{\n                    \n                var row='';\n                for (var e in result )\n                {\n                    \n                    var emp=result[e].employee;\n                    var emp_nm=result[e].employee_name;\n                    var daily_rate=result[e].daily_rate;\n                    \n                  \n                    row = frm.add_child(\"employees\");\n                    row.employee = emp;\n                    row.employee_name = emp_nm;\n                    row.daily_rate = daily_rate;\n                    frm.refresh_field(\"employees\");\n                    \n                    //For Concatenating attendance-date and advance\n                    frappe.db.get_list(\"Card Attendance\", {\n                            filters:{\n                                advance:[\"!=\", null],\n                                attendance_date:[\"between\", [f_date, t_date]],\n                                employee:emp\n                            },\n                            fields: [\"employee_name\", \"advance\", \"attendance_date\"],\n                            order_by:'attendance_date asc'\n                    }).then(function(rec){\n                            var custom_object = {};\n                                    \n                                for (var i=0; i<rec.length; i++) \n                                {\n                                    var record = rec[i];\n                                    if(!custom_object.employee_name)\n                                    {\n                                        custom_object.employee_name=record.employee_name;\n                                    }\n                                    if(!custom_object.attendance_date)\n                                    {\n                                        custom_object.attendance_date=moment(record.attendance_date).format(\"DD-MM-YYYY\");\n                                    }\n                                    else\n                                    {\n                                        custom_object.attendance_date += \"\\n\"+moment(record.attendance_date).format(\"DD-MM-YYYY\");\n                                    }\n                                    if(!custom_object.advance)\n                                    {\n                                        custom_object.advance=record.advance;\n                                    }\n                                    else\n                                    {\n                                        custom_object.advance += \"\\n\"+record.advance;\n                                    }\n                                    if(!custom_object.final_result)\n                                    {\n                                        custom_object.final_result=moment(record.attendance_date).format(\"DD-MM-YYYY\")+\" - \"+record.advance+\" Rs\";\n                                    }\n                                    else\n                                    {\n                                        var final=moment(record.attendance_date).format(\"DD-MM-YYYY\")+\" - \"+record.advance+\" Rs\";\n                                        custom_object.final_result += \", \"+final;\n                                    }\n                                }\n                                return custom_object;\n                                        \n                    }).then(function(custom_object){\n                            var my_list=[];\n                            my_list.push(custom_object);\n                            \n                            var em_nm = my_list[0].employee_name;\n                            var at_date = my_list[0].attendance_date;\n                            var advc = my_list[0].advance;\n                                    \n                            var final_ans =my_list[0].final_result;\n                            \n                            console.log(final_ans);\n                                    \n                            var c_table=cur_frm.doc.employees;\n                                \n                            for(var k=0;k<c_table.length;k++)\n                            {\n                                var row1 = c_table[k];\n                                if(row1.employee_name==em_nm)\n                                {\n                                    row1.advance_details = final_ans;\n                                }\n                            }\n                            cur_frm.refresh_fields(\"employees\");\n                                    \n                    });\n                    \n                    \n                \n                    //For Concatenating attendance-date and advance\n                    frappe.db.get_list(\"Card Attendance\", {\n                            filters:{\n                                attendance_date:[\"between\", [f_date, t_date]],\n                                employee:emp\n                            },\n                            fields: [\"employee_name\", \"card_status\" ,\"card_working_hours\", \"attendance_date\"]\n                    }).then(function(rec){\n                            var custom_object = {};\n                                    \n                                for (var i=0; i<rec.length; i++) \n                                {\n                                    var record = rec[i];\n                                    if(!custom_object.employee_name)\n                                    {\n                                        custom_object.employee_name=record.employee_name;\n                                    }\n                                    if(!custom_object.final_result)\n                                    {\n                                        custom_object.final_result=moment(record.attendance_date).format(\"DD-MM-YYYY\")+\"        \"+record.card_status+\"      \"+Math.round(record.card_working_hours)+\" hours\";\n                                    }\n                                    else\n                                    {\n                                        var final=moment(record.attendance_date).format(\"DD-MM-YYYY\")+\"        \"+record.card_status+\"      \"+Math.round(record.card_working_hours)+\" hours\";\n                                        custom_object.final_result += \"\\n\"+final;\n                                    }\n                                }\n                                return custom_object;\n                                        \n                    }).then(function(custom_object){\n                            var my_list=[];\n                            my_list.push(custom_object);\n                            var em_nm = my_list[0].employee_name;\n                            var at_date = my_list[0].attendance_date;\n                            var advc = my_list[0].advance;\n                                    \n                            var final_ans =my_list[0].final_result;\n                            console.log(final_ans);\n                                    \n                            var c_table=cur_frm.doc.employees;\n                                \n                            for(var k=0;k<c_table.length;k++)\n                            {\n                                var row1 = c_table[k];\n                                if(row1.employee_name==em_nm)\n                                {\n                                    row1.attendance_details = final_ans;\n                                }\n                            }\n                            cur_frm.refresh_fields(\"employees\");\n                                    \n                    });\n                   \n                    //For set total working hours, payment, present-absent days\n                    frappe.call({\n                            method: \"working_hours\", \n                            args:{\n                                \"from_date\": f_date,\n                                \"to_date\": t_date,\n                                \"emp\": emp,\n                              \n                            },\n                             callback: function(r) {\n                               \n                                \n                                var ans_hour = r.message[0];\n                                var totHours = ans_hour.cardhour;\n                                var ad = ans_hour.empadvance;\n                                \n                                var em = ans_hour.employee;\n                                var presentDays = r.msgpresnt;\n                                var absentDays = r.msgabsent;\n                   \n                               \n                                \n                                var child_table=cur_frm.doc.employees;\n                                \n                                for(var i=0;i<child_table.length;i++){\n                                    if(child_table[i].employee==em){\n                                        child_table[i].total_hours=totHours;\n                                        child_table[i].advance=ad;\n            \n                                        // var standardHours = child_table[i].standard_hours;\n                                        var rate = child_table[i].daily_rate;\n                                        var hour_rate = rate/Std_Hours;\n                                        var Advance = child_table[i].advance;\n                                        var pendingPayment = child_table[i].pending_payment;\n                                        \n                                        var pay = Math.round(hour_rate*totHours);\n                                        console.log(pay);\n                                        child_table[i].payment=pay;\n                                        \n                                        child_table[i].present_days=presentDays;\n                                        child_table[i].absent_days=absentDays;\n                                        \n                                        if(Advance==null && pendingPayment==null)\n                                        {\n                                            child_table[i].total_payment=pay;\n                                        }\n                                        else if (Advance!==null && pendingPayment==null)\n                                        {\n                                            var tot_pay = pay-Advance;\n                                            child_table[i].total_payment=tot_pay;\n                                        }\n                                        else if (Advance==null && pendingPayment!==null)\n                                        {\n                                            var tot_pay1 = pay-pendingPayment;\n                                            child_table[i].total_payment=tot_pay1;\n                                            \n                                        }\n                                        else if(Advance!==null && pendingPayment!==null)\n                                        {\n                                            var tot_pay2 = pay-Advance;\n                                            var final_pay = tot_pay2-pendingPayment;\n                                            child_table[i].total_payment=final_pay;\n                                            \n                                        }\n                                       \n                                        cur_frm.refresh_fields(\"employees\");\n                                       document.querySelectorAll(\"[data-fieldname = 'get_data']\")[1].style.backgroundColor = '#0089FF';\n                                    }\n                                    \n                                }\n                                \n                             \n                             \n                            }\n                    });\n                    \n                }\n                \n            });\n            frm.script_executed=true;\n            }\n            \n           \n\t\t\n\t    }\t\n\t\t\n\t}\n});\nfunction set_css(frm){\n    console.log(\"hello\");\n\tdocument.querySelectorAll(\"[data-fieldname = 'get_data']\")[1].style.backgroundColor = '#0089FF';\n    document.querySelectorAll(\"[data-fieldname = 'get_data']\")[1].style.marginTop = '5px    ';\n\tdocument.querySelectorAll(\"[data-fieldname = 'get_data']\")[1].style.color = '#fff';\n\tdocument.querySelectorAll(\"[data-fieldname = 'get_data']\")[1].style.padding = \"9px 15px 9px 15px\";\n\t\n\t\n\t\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bulk Payment",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.375421",
  "module": "khetangroup",
  "name": "Bulk Payment of employees on field",
  "script": "frappe.ui.form.on('Bulk Employee Details', {\n    \n    employee:function(frm,cdt,cdn) {\n    \n    var child = locals[cdt][cdn];\n     \n    var emp = child.employee;\n    var rate = child.daily_rate;\n    var shours = child.standard_hours;\n    var hour_rate = rate/shours;\n    \n    var f_date = frm.doc.from_date;\n    var t_date = frm.doc.to_date;\n    \n    frappe.call({\n            method: \"working_hours\", \n            args:{\n                \"from_date\": f_date,\n                \"to_date\": t_date,\n                \"emp\": emp,\n                      \n            },\n            callback: function(r) {\n                               \n                                \n            var ans_hour = r.message[0];\n            var totHours = ans_hour.cardhour;\n            console.log(totHours);\n            var ad = ans_hour.empadvance;\n                                \n            var em = ans_hour.employee;\n            var presentDays = r.msgpresnt;\n            var absentDays = r.msgabsent;\n                   \n                               \n                                \n            var child_table=cur_frm.doc.employees;\n                                \n            for(var i=0;i<child_table.length;i++){\n                if(child_table[i].employee==em){\n                        child_table[i].total_hours=totHours;\n                        child_table[i].advance=ad;\n            \n                        var standardHours = child_table[i].standard_hours;\n                        var rate = child_table[i].daily_rate;\n                        var hour_rate = rate/standardHours;\n                        var Advance = child_table[i].advance;\n                        var pendingPayment = child_table[i].pending_payment;\n                                        \n                        var pay = Math.round(hour_rate*totHours);\n                        console.log(pay);\n                        child_table[i].payment=pay;\n                                        \n                        child_table[i].present_days=presentDays;\n                        child_table[i].absent_days=absentDays;\n                                        \n                        if (Advance!==null && pendingPayment==null)\n                        {\n                            var tot_pay = pay-Advance;\n                            child_table[i].total_payment=tot_pay;\n                        }\n                        else if (Advance==null && pendingPayment!==null)\n                        {\n                            var tot_pay1 = pay-pendingPayment;\n                            child_table[i].total_payment=tot_pay1;\n                                \n                        }\n                        else if(Advance!==null && pendingPayment!==null)\n                        {\n                            var tot_pay2 = pay-Advance;\n                            var final_pay = tot_pay2-pendingPayment;\n                            child_table[i].total_payment=final_pay;\n                                            \n                        }\n                        else\n                        {\n                            child_table[i].total_payment=pay;\n                                           \n                        }\n                        cur_frm.refresh_fields(\"employees\");\n                                       \n                }\n            }\n                                \n            }\n    });\n    \n    //For Concatenating attendance-date and advance\n    frappe.db.get_list(\"Card Attendance\", {\n            filters:{\n                advance:[\"!=\", null],\n                attendance_date:[\"between\", [f_date, t_date]],\n                employee:emp\n            },\n            fields: [\"employee_name\", \"advance\", \"attendance_date\"]\n            }).then(function(rec){\n                    var custom_object = {};\n                                    \n                    for (var i=0; i<rec.length; i++) \n                    {\n                        var record = rec[i];\n                        if(!custom_object.employee_name)\n                        {\n                            custom_object.employee_name=record.employee_name;\n                        }\n                        if(!custom_object.attendance_date)\n                        {\n                            custom_object.attendance_date=moment(record.attendance_date).format(\"DD-MM-YYYY\");\n                        }\n                        else\n                        {\n                            custom_object.attendance_date += \"\\n\"+moment(record.attendance_date).format(\"DD-MM-YYYY\");\n                        }\n                        if(!custom_object.advance)\n                        {\n                            custom_object.advance=record.advance;\n                        }\n                        else\n                        {\n                            custom_object.advance += \"\\n\"+record.advance;\n                        }\n                        if(!custom_object.final_result)\n                        {\n                            custom_object.final_result=moment(record.attendance_date).format(\"DD-MM-YYYY\")+\" - Rs. \"+record.advance;\n                        }\n                        else\n                        {\n                            var final=moment(record.attendance_date).format(\"DD-MM-YYYY\")+\" - Rs. \"+record.advance;\n                            custom_object.final_result += \", \"+final;\n                        }\n                    }\n                    return custom_object;\n                                        \n                    }).then(function(custom_object){\n                            var my_list=[];\n                            my_list.push(custom_object);\n                            var em_nm = my_list[0].employee_name;\n                            var at_date = my_list[0].attendance_date;\n                            var advc = my_list[0].advance;\n                                    \n                            var final_ans =my_list[0].final_result;\n                            console.log(final_ans);\n                                    \n                            var c_table=cur_frm.doc.employees;\n                                \n                            for(var k=0;k<c_table.length;k++)\n                            {\n                                var row1 = c_table[k];\n                                if(row1.employee_name==em_nm)\n                                {\n                                    row1.advance_details = final_ans;\n                                }\n                            }\n                            cur_frm.refresh_fields(\"employees\");\n                                    \n            });\n                         \n},\n   \n\ttotal_hours:function(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn];\n\t    \n\t    var tot_hours = child.total_hours;\n        var dailyRate = child.daily_rate;\n        var standardHours = child.standard_hours;\n        var hour_rate = dailyRate/standardHours;\n        var pay = Math.round(tot_hours*hour_rate);\n        var advance = child.advance;\n        var pendingPayment = child.pending_payment;\n\n        frappe.model.set_value(cdt, cdn, \"payment\", pay);\n        // frappe.model.set_value(cdt, cdn, \"total_payment\", pay);\n\t    if(child.total_hours && child.daily_rate && !child.advance && !child.pending_payment){\n\t       \n\t        frappe.model.set_value(cdt, cdn, \"total_payment\", pay);\n\t        frm.refresh_fields('employees');      \n\t    }\n\t    else{\n\t        if (advance!==null && pendingPayment==null){\n            var tot_pay = pay-advance;\n            \n            child.total_payment = tot_pay;\n            frm.refresh_fields('employees');\n        }\n        else if (advance==null && pendingPayment!==null){\n            var tot_pay1 = pay-pendingPayment;\n            \n            child.total_payment = tot_pay1;\n            frm.refresh_fields('employees');\n        }\n        else if(advance!==null && pendingPayment!==null){\n            var tot_pay2 = pay-advance;\n            var final_pay = tot_pay2-pendingPayment;\n            \n            child.total_payment = final_pay;\n            frm.refresh_fields('employees');\n        }\n\t    }\n\t  \n    },\n\tdaily_rate:function(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn];\n\t    \n\t    var tot_hours = child.total_hours;\n        var dailyRate = child.daily_rate;\n        var standardHours = child.standard_hours;\n        var hour_rate = dailyRate/standardHours;\n        var pay = Math.round(tot_hours*hour_rate);\n        var advance = child.advance;\n        var pendingPayment = child.pending_payment;\n\n        frappe.model.set_value(cdt, cdn, \"payment\", pay);\n        // frappe.model.set_value(cdt, cdn, \"total_payment\", pay);\n\t    if(child.total_hours && child.daily_rate && !child.advance && !child.pending_payment){\n\t       \n\t        frappe.model.set_value(cdt, cdn, \"total_payment\", pay);\n\t        frm.refresh_fields('employees');      \n\t    }\n\t    else{\n\t        if (advance!==null && pendingPayment==null){\n            var tot_pay = pay-advance;\n            \n            child.total_payment = tot_pay;\n            frm.refresh_fields('employees');\n        }\n        else if (advance==null && pendingPayment!==null){\n            var tot_pay1 = pay-pendingPayment;\n            \n            child.total_payment = tot_pay1;\n            frm.refresh_fields('employees');\n        }\n        else if(advance!==null && pendingPayment!==null){\n            var tot_pay2 = pay-advance;\n            var final_pay = tot_pay2-pendingPayment;\n            \n            child.total_payment = final_pay;\n            frm.refresh_fields('employees');\n        }\n\t    }\n\t   \n\t},\n\tadvance:function(frm,cdt,cdn) {\n\t   \n\t    var child = locals[cdt][cdn];\n\t    \n\t    var tot_hours = child.total_hours;\n        var dailyRate = child.daily_rate;\n        var standardHours = child.standard_hours;\n        var hour_rate = dailyRate/standardHours;\n        var pay = Math.round(tot_hours*hour_rate);\n        var advance = child.advance;\n        var pendingPayment = child.pending_payment;\n\n        frappe.model.set_value(cdt, cdn, \"payment\", pay);\n\t  \n\t    if (advance!==null && pendingPayment==null){\n            var tot_pay = pay-advance;\n            \n            child.total_payment = tot_pay;\n            frm.refresh_fields('employees');\n        }\n        else if (advance==null && pendingPayment!==null){\n            var tot_pay1 = pay-pendingPayment;\n            \n            child.total_payment = tot_pay1;\n            frm.refresh_fields('employees');\n        }\n        else if(advance!==null && pendingPayment!==null){\n            var tot_pay2 = pay-advance;\n            var final_pay = tot_pay2-pendingPayment;\n            \n            child.total_payment = final_pay;\n            frm.refresh_fields('employees');\n        }\n\t    \n\t},\n\tpending_payment:function(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn];\n\t    \n\t    var tot_hours = child.total_hours;\n        var dailyRate = child.daily_rate;\n        var standardHours = child.standard_hours;\n        var hour_rate = dailyRate/standardHours;\n        var pay = Math.round(tot_hours*hour_rate);\n        var advance = child.advance;\n        var pendingPayment = child.pending_payment;\n\n        frappe.model.set_value(cdt, cdn, \"payment\", pay);\n\t  \n\t    if (advance!==null && pendingPayment==null){\n            var tot_pay = pay-advance;\n            \n            child.total_payment = tot_pay;\n            frm.refresh_fields('employees');\n        }\n        else if (advance==null && pendingPayment!==null){\n            var tot_pay1 = pay-pendingPayment;\n            \n            child.total_payment = tot_pay1;\n            frm.refresh_fields('employees');\n        }\n        else if(advance!==null && pendingPayment!==null){\n            var tot_pay2 = pay-advance;\n            var final_pay = tot_pay2-pendingPayment;\n            \n            child.total_payment = final_pay;\n            frm.refresh_fields('employees');\n        }\n\t    \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bulk Payment",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.388139",
  "module": "khetangroup",
  "name": "Generate Salary slip based on Bulk Payment",
  "script": "frappe.ui.form.on('Bulk Payment', {\n\tafter_save(frm) {\n\t\t$.each(frm.doc.employees || [], function(i,d){\n        var emp = d.employee;\n        var presentDays = d.present_days;\n        var absentDays = d.absent_days;\n        var dailyRate = d.daily_rate;\n        var pay = d.payment;\n        var advance = d.advance;\n        var pendingPayment = d.pending_payment;\n        var tot_pay = d.total_payment;\n        // console.log(pendingPayment);\n        \n        if(tot_pay!==null){\n            \n            frappe.db.insert({\n                doctype: 'Salary Slip',\n                employee: emp,\n                salary_structure:'',\n                pending_amount:pendingPayment,\n                absent_days:absentDays,\n                present_days:presentDays,\n                daily_rate: dailyRate,\n                earnings:[\n                        {\n                            salary_component: 'Basic',\n                            amount: pay\n                           \n                        }\n                ],\n                deductions:[\n                        {\n                            \n                            salary_component: 'Advance',\n                            amount: advance\n                           \n                        },\n                        {\n                            salary_component: 'Other Deductions',\n                            amount: pendingPayment\n                        }\n                ],\n                \n                 \n                  \n                 \n                \n            }).then(doc => {\n                console.log(doc);\n              \n            });\n\n        }   \n        \n        \n\t\t});\n\t\t\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.406670",
  "module": "khetangroup",
  "name": "Filter employees company wise in stock entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\tfrm.set_query(\"supervisor\",function(){\n\t    return{\n\t        filters:{\n\t            'company':cur_frm.doc.company\n\t           \n\t        }\n\t        \n\t    };\n\t});\n\tfrm.set_query(\"senior_operator\",function(){\n\t    return{\n\t        filters:{\n\t            'company':cur_frm.doc.company\n\t           \n\t        }\n\t        \n\t    };\n\t});\n\tfrm.set_query(\"operator\",function(){\n\t    return{\n\t        filters:{\n\t            'company':cur_frm.doc.company\n\t           \n\t        }\n\t        \n\t    };\n\t});\n}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.416374",
  "module": "khetangroup",
  "name": "filter",
  "script": "cur_frm.cscript.onload = function(frm) {\n    \n\n   \n    cur_frm.set_query(\"batch_no\", \"items\", function(doc, cdt, cdn) {\n        var child = locals[cdt][cdn]; \n\n        \n        var itemcode = child.item_code;\n      \n\n        return {\n            \"filters\": {\n                \"docstatus\": [\"in\", \"Empty\", \"Active\"],\n                \n                \"item\": itemcode  \n            }\n        };\n    });\n    \n};\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.071027",
  "module": "khetangroup",
  "name": "new_quotation",
  "script": "\rfrappe.ui.form.on('Quotation Item', {\r    item_code:function(frm, cdt, cdn) {\r        let item = locals[cdt][cdn]\r        let item_code = item.item_code\r        frappe.call({\r          method:\"inches\",\r          args:{\"item_code\":item_code},\r          callback: function(r) {\r              update_item_code_data(item,r)\r          },\r          freeze: false,\r          freeze_message: \"\",\r          async: true,\r        })\r\t}\r});\r\rfunction update_item_code_data(item,result){\r        let item_data =result['item']\r     \r        // item.name = item_data['name']\r        item.products_type = item_data[\"products_type\"]\r        item.owner = item_data['owner']\r        item.creation = item_data['creation']\r        item.modified = item_data['modified']\r        item.modified_by = item_data['modified_by']\r        item.naming_series = item_data['naming_series']\r        item.item_code  = item_data['item_code']\r        item.uom = item_data['stock_uom']\r        item.item_name  = item_data['item_name']\r        item.company = item_data['company']\r        item.item_group  = item_data['item_group']\r        item.is_nil_exempt  = item_data['is_nil_exempt']\r        item.is_non_gst  = item_data['is_non_gst']\r        item.item_main  = item_data['item_main']\r        item.item_type  = item_data['item_type'] \r        item.stock_uom  = item_data['stock_uom']\r        item.disabled  = item_data['disabled']\r        item.allow_alternative_item  = item_data['allow_alternative_item']\r        item.is_stock_item  = item_data['is_stock_item']\r        item.has_variants  = item_data['has_variants']\r        item.include_item_in_manufacturing  = item_data['include_item_in_manufacturing']\r        item.opening_stock  = item_data['opening_stock']\r        item.valuation_rate  = item_data['valuation_rate']\r        item.standard_rate  = item_data['standard_rate']\r        item.is_fixed_asset  = item_data['is_fixed_asset']\r        item.auto_create_assets  = item_data['auto_create_assets']\r        item.is_grouped_asset  = item_data['is_grouped_asset']\r        item.over_delivery_receipt_allowance  = item_data['over_delivery_receipt_allowance']\r        item.over_billing_allowance  = item_data['over_billing_allowance']\r        item.description  = item_data['description']\r        item.size  = item_data['size']\r        item.shape_type  = item_data['shape_type']\r        item.default_set  = item_data['default_set']\r        item.normal_margin  = item_data['normal_margin']\r        item.grade  = item_data['grade']\r        item.thickness  = item_data['thickness']\r        item.special_margin  = item_data['special_margin']\r        item.shelf_life_in_days  = item_data['shelf_life_in_days']\r        item.end_of_life  = item_data['end_of_life']\r        item.default_material_request_type  = item_data['default_material_request_type']\r        item.valuation_method  = item_data['valuation_method']\r        item.weight_per_unit = item_data['weight_per_unit']\r        item.weight_special_customer  = item_data['weight_special_customer']\r        item.weight_uom  = item_data['weight_uom']\r        item.allow_negative_stock  = item_data['allow_negative_stock']\r        item.has_batch_no  = item_data['has_batch_no']\r        item.create_new_batch  = item_data['create_new_batch']\r        item.has_expiry_date  = item_data['has_expiry_date']\r        item.retain_sample  = item_data['retain_sample']\r        item.sample_quantity  = item_data['sample_quantity']\r        item.has_serial_no  = item_data['has_serial_no']\r        item.variant_based_on = item_data['variant_based_on']\r        item.min_order_qty  = item_data['min_order_qty']\r        item.safety_stock  = item_data['safety_stock']\r        item.is_purchase_item  = item_data['is_purchase_item']\r        item.lead_time_days  = item_data['lead_time_days']\r        item.last_purchase_rate  = item_data['last_purchase_rate']\r        item.is_customer_provided_item  = item_data['is_customer_provided_item']\r        item.delivered_by_supplier  = item_data['delivered_by_supplier']\r        item.enable_deferred_expense  = item_data['enable_deferred_expense']\r        item.no_of_months_exp  = item_data['no_of_months_exp']\r        item.grant_commission  = item_data['grant_commission']\r        item.is_sales_item  = item_data['is_sales_item']\r        item.max_discount  = item_data['max_discount']\r        item.enable_deferred_revenue  = item_data['enable_deferred_revenue']\r        item.no_of_months  = item_data['no_of_months']\r        item.inspection_required_before_purchase  = item_data['inspection_required_before_purchase']\r        item.inspection_required_before_delivery  = item_data['inspection_required_before_delivery']\r        item.is_sub_contracted_item  = item_data['is_sub_contracted_item']\r        item.customer_code = item_data['customer_code']\r        item.published_in_website  = item_data['published_in_website']\r        item.total_projected_qty  = item_data['total_projected_qty']\r\r        cur_frm.fields_dict['items'].grid.grid_rows_by_docname[item.name].refresh()\r\r}\r\r\rlet item_code_change_default = erpnext.TransactionController.prototype.item_code\rlet pricing_rule_default = erpnext.TransactionController.prototype.apply_pricing_rule\r\rfrappe.ui.form.on('Quotation', {\r    refresh:function(frm){\r        if(frm.doc.company_unit === \"Unit 2\"){\r            \r            frm.get_field('items').grid.grid_pagination.page_length = 250\r            erpnext.TransactionController.prototype.apply_pricing_rule = function (){}\r            erpnext.TransactionController.prototype.item_code = function (){}\r        }else{\r            frm.get_field('items').grid.grid_pagination.page_length = 50;\r            erpnext.TransactionController.prototype.item_code = item_code_change_default\r            erpnext.TransactionController.prototype.apply_pricing_rule = pricing_rule_default\r        }\r        frm.get_field('items').grid.reset_grid();\r  \r    },\r\tcompany:function(frm) {\r\t    if(frm.doc.company_unit === \"Unit 2\"){\r\t        frm.set_query(\"item_code\",\"items\",function(){\r\t            return{\r\t                filters:{\r\t                    'item_group':\"Products\",\r\t                    'is_sales_item':1\t           \r\t                }\t        \r\t            };\r            });\r            frm.get_field('items').grid.grid_pagination.page_length = 250\r            frm.get_field('items').grid.reset_grid();\r            erpnext.TransactionController.prototype.apply_pricing_rule = function (){}\r            erpnext.TransactionController.prototype.item_code = function (){}\r\t    }else{\r\t        frm.get_field('items').grid.grid_pagination.page_length = 50;\r\t        erpnext.TransactionController.prototype.item_code = item_code_change_default\r\t        erpnext.TransactionController.prototype.apply_pricing_rule = pricing_rule_default\r\t    }\r\t    frm.get_field('items').grid.reset_grid();\r\t    refresh_field(\"items\");\r    }\r\t\r})\r\rfrappe.ui.form.on(\"Quotation Item\", \"pcs\",function(frm, cdt, cdn){\r    var d = locals[cdt][cdn];\r    var rate202 = cur_frm.doc.rate202;\r    // console.log(rate202)\r    var rate304 = cur_frm.doc.rate304;\r    // console.log(rate304)\r    var rate316 = cur_frm.doc.rate316;\r    // console.log(rate316)\r    var sheet202 = cur_frm.doc.sheet202;\r    // console.log(sheet202)\r    var sheet304 = cur_frm.doc.sheet304;\r    // console.log(sheet304)\r    // var item_type = d.item_type;\r    var margin = 0;\r    var rate = 0;\r    // console.log(\"This is Special margin\", margin);\r    // console.log(d.special_margin)\r    if (d.pipe == 1 && d.item_202 == 1 || d.pipe == 1 && d.item_304 == 1 || d.pipe == 1 && d.item_316 || d.sheet == 1 && d.item_202 || d.sheet == 1 && d.item_304 ){\r        var cust_type = cur_frm.doc.is_special;\r           var general = cur_frm.doc.is_general;\r          \r        // console.log(\"pcs are \"+d.pcs);\r        var pcs=d.pcs;\r        if (cust_type==1){\r          \r            var item = d.item_code;\r            // console.log(\"This is Special margin\"+ d.special_margin);\r            // frappe.call({\r    \t\t      //    method:\"weight\",\r    \t\t      //    args:{\"item\":item},\r    \t\t      //}).then(records => {\r                            // alert(records[\"message\"]);\r                        var weight = d.weight_special_customer\r                        d.weight_per_unit = weight;\r                        \r                        // console.log(\"this is qty send\")\r                        // margin = d.special_margin;\r                        // alert(\"Hello this is margin\",margin)\r                        \r                        if(d.pipe==1 && d.item_202 == 1){\r                            rate = rate202 + d.special_margin;\r                            \r                            // console.log(\"202p\"+rate)\r                        }\r                        else if(d.pipe==1 && d.item_304 == 1){\r                            rate = rate304 + d.special_margin;\r                            // console.log(\"304p\"+rate)\r                        }\r                        else if(d.pipe==1 && d.item_316 == 1){\r                            rate = rate316 + d.special_margin;\r                            // console.log(\"316p\"+rate)\r                        }\r                        else if(d.sheet==1 && d.item_202 == 1){\r                            rate = sheet202 + d.special_margin;\r                            // console.log(\"202s\"+rate)\r                        }\r                        else if(d.sheet==1 && d.item_304 == 1){\r                            rate = sheet304 + d.special_margin;\r                            // console.log(\"304s\"+rate)\r                        }\r                        // console.log(\"this is rate \"+rate);\r                        var actual_w = d.weight;\r                        if (actual_w === 0){\r                            // console.log(\"No Actual Weight\");\r                            frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r                            frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight); \r                            // alert(weight*pcs);\r                            frappe.model.set_value(cdt, cdn, \"weight_diff\", (weight*pcs)-actual_w);\r                            frappe.model.set_value(cdt, cdn, \"rate1\",rate);\r                        }\r                        else{\r                            // console.log(\"yes Actual Weight\");\r                            var rate1 = d.rate1;\r                            // alert(weight);\r                            // console.log(\"rate\"+ rate1);\r                            // console.log(\"Actual Weight\", actual_w);\r                            var amt2 = rate1 * actual_w;\r                            // console.log(\"Actual Weight\", amt2);\r                            var rate21 = amt2/pcs;\r                            // console.log(\"rate21\", rate21);\r                            // console.log(\"weight per unit: \", weight);\r                            var total_weight = weight * pcs;\r                            var we_diff=total_weight-actual_w;\r                            // console.log(\"Weight difference\"+ we_diff);\r                            frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r                            frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight); \r                            // alert(weight);\r                            frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff);\r                            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate21);\r                        }\r    \t\t      //});        \r        }\r     \r        else if (general === 1){\r            // console.log(\"Hey You are General customer\");\r            // var pcs=d.pcs;\r            var weight = d.weight_per_unit;\r            // alert(\"This are pcs of general\"+pcs);\r            frappe.model.set_value(cdt, cdn, \"qty\", pcs); \r            margin = d.normal_margin;\r            if(d.pipe==1 && d.item_202 == 1){\r                rate = rate202 + d.normal_margin;\r                // console.log(\"202p\"+rate)\r            }\r            else if(d.pipe==1 && d.item_304 == 1){\r                rate = rate304 + d.normal_margin;\r                // console.log(\"304p\"+rate)\r            }\r            else if(d.pipe==1 && d.item_316 == 1){\r                rate = rate316 + d.normal_margin;\r                // console.log(\"316p\"+rate)\r            }\r            else if(d.sheet==1 && d.item_202 == 1){\r                rate = sheet202 + d.normal_margin;\r                // console.log(\"202s\"+rate)\r            }\r            else if(d.sheet==1 && d.item_304 == 1){\r                rate = sheet304 + d.normal_margin;\r                // console.log(\"304s\"+rate)\r            }\r            // console.log(\"this is rate \"+rate);\r            var actual_w = d.weight;\r            if (actual_w === 0){\r                // console.log(\"No Actual Weight\");\r                // alert(\"Weight per unit\"+ d.weight_per_unit)\r                frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r                // alert(d.weight_per_unit*pcs);\r                frappe.model.set_value(cdt, cdn, \"weight_diff\", (d.weight_per_unit*pcs)-actual_w);\r                frappe.model.set_value(cdt, cdn, \"rate1\",rate);\r                // frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight); \r            }\r            else{\r                // frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight);\r                // console.log(\"yes Actual Weight\");\r                var rate1 = d.rate1;\r                // alert(rate1);\r                // console.log(\"rate\"+ rate1);\r                // console.log(\"Actual Weight\", actual_w);\r                var amt2 = rate1 * actual_w;\r                // console.log(\"Amount\", amt2);\r                var rate21 = amt2/pcs;\r                // console.log(\"rate21\", rate21);\r                // console.log(\"weight per unit: \", weight);\r                var total_weight = weight * pcs;\r                // console.log(\"Pcs Present\"+ pcs);\r                // console.log(\"Total Weight of system\"+ total_weight);\r                var we_diff = total_weight-actual_w;\r                // console.log(\"Weight Difference\"+ we_diff);\r                frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r                frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff);\r                frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate21);\r            }\r        }\r    }\r    else{\r        var pcs=d.pcs;\r        var weight_bactual= d.weight;\r        var weight_per_b = d.weight_per_unit;\r        var we_diff_b;\r        if (weight_bactual === 0){\r                // console.log(\"No Actual Weight\");\r                var rate_bluster = 0;\r                var select_item_type = cur_frm.doc.select_item_type;\r                var item_type = d.item_type;\r                if (select_item_type === \"Blustor And Pillar\"){\r                    // console.log(\"hey catch you\")\r                    if(item_type==\"550 Grm R Blustor 202\"){\r                        rate_bluster = cur_frm.doc.rbgm55202;\r                    }\r                    else if(item_type==\"650 Grm R Blustor 202\"){\r                        rate_bluster = cur_frm.doc.rbgm65202;\r                    }\r                    else if(item_type==\"700 Grm R Blustor 202\"){\r                        rate_bluster = cur_frm.doc.rbgm70202;\r                    }\r                    else if(item_type==\"900 Grm R Blustor 202\"){\r                        rate_bluster = cur_frm.doc.rbgm90202;\r                    }\r                    else if(item_type==\"1100 Grm R Blustor 202\"){\r                        rate_bluster = cur_frm.doc.rbgm110202;\r                    }\r                    else if(item_type==\"700 Grm Sq Blustor 202\"){\r                        rate_bluster = cur_frm.doc.sqbgm70202;\r                    }\r                    else if(item_type==\"800 Grm Sq Blustor 202\"){\r                        rate_bluster = cur_frm.doc.sqbgm65202;\r                    }\r                    else if(item_type==\"900 Grm Sq Blustor 202\"){\r                        rate_bluster = cur_frm.doc.sqbgm90202;\r                    }\r                    else if(item_type==\"1100 Grm Sq Blustor 202\"){\r                        rate_bluster = cur_frm.doc.sqbgm110202;\r                    }\r                    else if(item_type==\"550 Grm R Blustor 304\"){\r                        rate_bluster = cur_frm.doc.rbgm55304;\r                    }\r                    else if(item_type==\"650 Grm R Blustor 304\"){\r                        rate_bluster = cur_frm.doc.rbgm65304;\r                    }\r                    else if(item_type==\"700 Grm R Blustor 304\"){\r                        rate_bluster = cur_frm.doc.rbgm70304;\r                    }\r                    else if(item_type==\"900 Grm R Blustor 304\"){\r                        rate_bluster = cur_frm.doc.rbgm90304;\r                    }\r                    else if(item_type==\"1100 Grm R Blustor 304\"){\r                        rate_bluster = cur_frm.doc.rbgm110304;\r                    }\r                    else if(item_type==\"700 Grm Sq Blustor 304\"){\r                        rate_bluster = cur_frm.doc.sqbgm70304;\r                    }\r                    else if(item_type==\"800 Grm Sq Blustor 304\"){\r                        rate_bluster = cur_frm.doc.sqbgm65304;\r                    }\r                    else if(item_type==\"900 Grm Sq Blustor 304\"){\r                        rate_bluster = cur_frm.doc.sqbgm90304;\r                    }\r                    else if(item_type==\"1100 Grm Sq Blustor 304\"){\r                        rate_bluster = cur_frm.doc.sqbgm110304;\r                    }\r                    else if(item_type==\"1.1 Master Pillar 202\"){\r                        rate_bluster = cur_frm.doc.mpillar11202;\r                    }\r                    else if(item_type==\"1.3 Master Pillar 202\"){\r                        rate_bluster = cur_frm.doc.mpillar13202;\r                    }\r                    else if(item_type==\"1.5 Master Pillar 202\"){\r                        rate_bluster = cur_frm.doc.mpillar15202;\r                    }\r                    else if(item_type==\"1.7 Master Pillar 202\"){\r                        rate_bluster = cur_frm.doc.mpillar17202;\r                    }\r                    else if(item_type==\"2.2 Master Pillar 202\"){\r                        rate_bluster = cur_frm.doc.mpillar22202;\r                    }\r                    else if(item_type==\"1.1 Master Pillar 304\"){\r                        rate_bluster = cur_frm.doc.mpillar11304;\r                    }\r                    else if(item_type==\"1.3 Master Pillar 304\"){\r                        rate_bluster = cur_frm.doc.mpillar13304;\r                    }\r                    else if(item_type==\"1.5 Master Pillar 304\"){\r                        rate_bluster = cur_frm.doc.mpillar15304;\r                    }\r                    else if(item_type==\"1.7 Master Pillar 304\"){\r                        rate_bluster = cur_frm.doc.mpillar17304;\r                    }\r                    else if(item_type==\"2.2 Master Pillar 304\"){\r                        rate_bluster = cur_frm.doc.mpillar22304;\r                    }\r                }\r                // alert(\"this is added\"+rate_bluster);\r                we_diff_b = (weight_per_b*pcs)\r                // console.log(rate_bluster*pcs)\r                frappe.model.set_value(cdt, cdn, \"estimated_amount\", rate_bluster*pcs);\r                frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r                frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate_bluster);\r                frappe.model.set_value(cdt, cdn, \"rate1\", rate_bluster);\r                frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff_b);\r                // frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight); \r            }\r            else{\r                // frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight);\r                // console.log(\"yes Actual Weight\");\r                var rateb= d.rate1;\r                \r                \r                var weight_per_b = d.weight_per_unit\r                we_diff_b = (weight_per_b*pcs)-weight_bactual\r                frappe.model.set_value(cdt, cdn, \"estimated_amount\", rateb*pcs);\r                frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff_b);\r                frappe.model.set_value(cdt, cdn, \"price_list_rate\", rateb);\r                frappe.model.set_value(cdt, cdn, \"qty\", pcs);  \r            }\r        \r    }\r    // alert(\"This is special size block\");\r    \r    \r    \r    \r    \r    // var cust_type = cur_frm.doc.customer_type;\r    // if (cust_type==\"Special\"){\r    //     // alert(\"hey you are special customer\")\r    //     var item = d.item_code;\r    //     frappe.call({\r\t\t  //        method:\"weight\",\r\t\t  //        args:{\"item\":item},\r\t\t  //    }).then(records => {\r    //                     // alert(records[\"message\"]);\r    //                 var weight = records['msg']\r    //                 d.weight_per_unit = weight;\r    //                 // console.log(d.pcs)\r    //                 var pcs=d.pcs;\r    //                 console.log(\"this is qty send\")\r    //                 frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r    //                 frappe.model.set_value(cdt, cdn, \"weight_per_unit\", weight); \r\t\t  //    });        \r    // }\r    // else if (cust_type==\"General\"){\r    //     var pcs1=d.pcs;\r    //     frappe.model.set_value(cdt, cdn, \"qty\", pcs1);       \r    // }\r    \r    \r    \r    \r    \r    // else if(cust_type==\"General\"){\r        \r    // }\r    // var default_set = d.default_set\r    // var total_set = qty_box * default_set;\r    // var total_set = qty_box\r    // var total_inches = total_set * d.special_size;\r    // alert(total_inches);\r    // alert(total_set);\r    // frappe.model.set_value(cdt, cdn, \"total_set\", total_set);\r    // frappe.model.set_value(cdt, cdn, \"qty\", total_set);\r    // frappe.model.set_value(cdt, cdn, \"total_inches\",total_inches);\r    // if (d.price_list_rate !== \"\"){\r    //     // alert(\"hey\")\r    //     var rate=d.price_amt*d.special_size;\r    //     frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate);\r    // }\r});\r\rfrappe.ui.form.on(\"Quotation Item\", \"weight\",function(frm, cdt, cdn){\r    var d = locals[cdt][cdn];\r    var select_item_type = cur_frm.doc.select_item_type;\r    var margin = 0;\r    var rate202 = cur_frm.doc.rate202;\r    var rate304 = cur_frm.doc.rate304;\r    var rate316 = cur_frm.doc.rate316;\r    var sheet202 = cur_frm.doc.sheet202;\r    var sheet304 = cur_frm.doc.sheet304;\r    var cust_type = cur_frm.doc.is_special;\r    var general = cur_frm.doc.is_general;\r    var item_type = d.item_type;\r    var rate = 0;\r    var pcs = d.pcs;\r    \r    if (cust_type==1){\r        margin = d.special_margin;\r    }\r    else{\r        margin = d.normal_margin;\r    }\r    if (select_item_type==\"Guage and Sheet\"){\r        var we = d.weight;\r        \r        var total_weight = d.weight_per_unit * pcs;\r        var we_diff=total_weight-we;\r        \r        \r        if(d.pipe == 1 && d.item_202 == 1){\r            rate = rate202 + margin;\r        }\r        else if(d.pipe == 1 && d.item_304 == 1){\r            rate = rate304 + margin;\r        }\r        else if(d.pipe == 1 && d.item_316 == 1){\r            rate = rate316 + margin;\r        }\r        else if(d.sheet == 1 && d.item_202 == 1){\r            rate = sheet202 + margin;\r        }\r        else if(d.sheet == 1 && d.item_304 == 1){\r            rate = sheet304 + margin;\r        }\r        \r        var amt2 = rate * we;\r        var rate21 = we_diff / pcs;\r        var rate22 = d.weight_per_unit - rate21;\r        var rate23 = rate22 * rate;\r        \r        if (pcs===0){\r        //   console.log(\"No PCS\");\r            frappe.model.set_value(cdt, cdn, \"estimated_amount\", rate*we);\r            frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff);\r            frappe.model.set_value(cdt, cdn, \"rate1\", rate);\r            rate = 0;\r            rate23 = 0;\r            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate23);\r        }\r        else{\r            // console.log(\"Yes PCS\");\r            frappe.model.set_value(cdt, cdn, \"estimated_amount\", rate*we);\r            frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff);\r            frappe.model.set_value(cdt, cdn, \"rate1\", rate);\r            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate23);\r        }\r        \r        \r    }\r    else if(select_item_type==\"Blustor And Pillar\"){\r        \r        if(item_type==\"550 Grm R Blustor 202\"){\r            rate = cur_frm.doc.rbgm55202;\r        }\r        else if(item_type==\"650 Grm R Blustor 202\"){\r            rate = cur_frm.doc.rbgm65202;\r        }\r        else if(item_type==\"700 Grm R Blustor 202\"){\r            rate = cur_frm.doc.rbgm70202;\r        }\r        else if(item_type==\"900 Grm R Blustor 202\"){\r            rate = cur_frm.doc.rbgm90202;\r        }\r        else if(item_type==\"1100 Grm R Blustor 202\"){\r            rate = cur_frm.doc.rbgm110202;\r        }\r        else if(item_type==\"700 Grm Sq Blustor 202\"){\r            rate = cur_frm.doc.sqbgm70202;\r        }\r        else if(item_type==\"800 Grm Sq Blustor 202\"){\r            rate = cur_frm.doc.sqbgm65202;\r        }\r        else if(item_type==\"900 Grm Sq Blustor 202\"){\r            rate = cur_frm.doc.sqbgm90202;\r        }\r        else if(item_type==\"1100 Grm Sq Blustor 202\"){\r            rate = cur_frm.doc.sqbgm110202;\r        }\r        else if(item_type==\"550 Grm R Blustor 304\"){\r            rate = cur_frm.doc.rbgm55304;\r        }\r        else if(item_type==\"650 Grm R Blustor 304\"){\r            rate = cur_frm.doc.rbgm65304;\r        }\r        else if(item_type==\"700 Grm R Blustor 304\"){\r            rate = cur_frm.doc.rbgm70304;\r        }\r        else if(item_type==\"900 Grm R Blustor 304\"){\r            rate = cur_frm.doc.rbgm90304;\r        }\r        else if(item_type==\"1100 Grm R Blustor 304\"){\r            rate = cur_frm.doc.rbgm110304;\r        }\r        else if(item_type==\"700 Grm Sq Blustor 304\"){\r            rate = cur_frm.doc.sqbgm70304;\r        }\r        else if(item_type==\"800 Grm Sq Blustor 304\"){\r            rate = cur_frm.doc.sqbgm65304;\r        }\r        else if(item_type==\"900 Grm Sq Blustor 304\"){\r            rate = cur_frm.doc.sqbgm90304;\r        }\r        else if(item_type==\"1100 Grm Sq Blustor 304\"){\r            rate = cur_frm.doc.sqbgm110304;\r        }\r        else if(item_type==\"1.1 Master Pillar 202\"){\r            rate = cur_frm.doc.mpillar11202;\r        }\r        else if(item_type==\"1.3 Master Pillar 202\"){\r            rate = cur_frm.doc.mpillar13202;\r        }\r        else if(item_type==\"1.5 Master Pillar 202\"){\r            rate = cur_frm.doc.mpillar15202;\r        }\r        else if(item_type==\"1.7 Master Pillar 202\"){\r            rate = cur_frm.doc.mpillar17202;\r        }\r        else if(item_type==\"2.2 Master Pillar 202\"){\r            rate = cur_frm.doc.mpillar22202;\r        }\r        else if(item_type==\"1.1 Master Pillar 304\"){\r            rate = cur_frm.doc.mpillar11304;\r        }\r        else if(item_type==\"1.3 Master Pillar 304\"){\r            rate = cur_frm.doc.mpillar13304;\r        }\r        else if(item_type==\"1.5 Master Pillar 304\"){\r            rate = cur_frm.doc.mpillar15304;\r        }\r        else if(item_type==\"1.7 Master Pillar 304\"){\r            rate = cur_frm.doc.mpillar17304;\r        }\r        else if(item_type==\"2.2 Master Pillar 304\"){\r            rate = cur_frm.doc.mpillar22304;\r        }\r        var total_weight1 = d.weight_per_unit * d.pcs;\r        var we_diff1 = total_weight1 - d.weight;\r        var rate233 = rate;\r        // console.log(\"This is total weight\", total_weight1);\r        // console.log(\"This is weight difference\", we_diff1);\r        // console.log(\"This is rate\", rate);\r        // console.log(\"This is rate233\", rate233);\r        // frappe.model.set_value(cdt, cdn, \"qty\", pcs);\r        \r        \r        \r        if (pcs === 0){\r            // console.log(\"NO PCS\")\r            frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff1);\r            frappe.model.set_value(cdt, cdn, \"rate1\", rate);\r            rate233=0;\r            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate233);\r            frappe.model.set_value(cdt, cdn, \"estimated_amount\", rate233*we);\r            // frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff);\r            // frappe.model.set_value(cdt, cdn, \"rate1\", rate);\r            // rate = 0;\r            // rate23 = 0;\r            // frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate23);\r        }\r        else{\r            // console.log(\"Yes PCS\")\r            frappe.model.set_value(cdt, cdn, \"weight_diff\", we_diff1);\r            frappe.model.set_value(cdt, cdn, \"rate1\", rate);\r            frappe.model.set_value(cdt, cdn, \"price_list_rate\", rate233);\r        }\r    }\r});\rfrappe.ui.form.on('Quotation Item', {\r    item_code: function(frm, cdt, cdn) {\r        var row = locals[cdt][cdn];\r       \r        var b = row.item_type\r        console.log(b)\r        if(row.item_type){\r         frappe.call({\r    \t        method:\"item_types\",\r    \t        args:{\"item_type\":b},\r    \t        }).then(records =>{\r        \t      if(records.pipe == 1){\r        \t         \r        \t      row.pipe = records.pipe;\r        \t      }\r        \t      if(records.sheet == 1){\r        \t        \r        \t      row.sheet = records.sheet;\r        \t      }\r        \t       if(records.blustor == 1){\r        \t           row.blustor = records.blustor;\r        \t      }\r        \t       if(records.pillar == 1){\r        \t         row.pillar = records.pillar;\r        \t      }\r        \t       if(records.item_202 == 1){\r        \t         row.item_202 = records.item_202;\r        \t      }\r        \t       if(records.item_304 == 1){\r        \t         row.item_304 = records.item_304;\r        \t      }\r        \t       if(records.item_316 == 1){\r        \t        row.item_316 = records.item_316;\r        \t      }\r        \t   \r        \t      console.log(records.pipe)\r    \t        frm.refresh_field(\"items\");\r    \t        })\r        }\r    }\r});\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-11-08 16:47:06.022593",
  "module": "khetangroup",
  "name": "Barcode",
  "script": "frappe.ui.form.on('Sales Order', {\n    new_scan_barcode: function(frm) {\n        // Get the value of new_scan_barcode field\n        var newScanBarcodeValue = frm.doc.new_scan_barcode;\n\n        // Find the index of the item if it already exists in the child table\n        var existingItemIndex = -1;\n\n        // Iterate through the child table rows to find the item\n        frm.doc.items.forEach(function(item, index) {\n            if (item.item_code === newScanBarcodeValue) {\n                existingItemIndex = index;\n                \n            }\n        });\n\n        // If the item already exists, increase the quantity\n        if (existingItemIndex !== -1) {\n            frappe.model.set_value(frm.doc.items[existingItemIndex].doctype, frm.doc.items[existingItemIndex].name, 'qty', frm.doc.items[existingItemIndex].qty + 1);\n        } else {\n          \n            var newRow = frappe.model.add_child(frm.doc, 'items');\n            frappe.model.set_value(newRow.doctype, newRow.name, 'item_code', newScanBarcodeValue);\n            frappe.model.set_value(newRow.doctype, newRow.name, 'qty', 1);\n             frappe.call({\n    \t        method:\"barcode\",\n    \t        args:{\"item_code\":newScanBarcodeValue},\n    \t        }).then(records =>{\n        \t    console.log(records.uom_details[0].uom)\n        \t    if(records !== null){\n        \t     frappe.model.set_value(newRow.doctype, newRow.name, 'uom', records.uom_details[0].uom);\n        \t    }\n           })\n       \n        }\n\n       \n        frm.refresh_field('items');\n       \n        cur_frm.doc.new_scan_barcode = ''\n    }\n});\n\n\nfrappe.ui.form.on('Sales Order', {\n    customer: function(frm) {\n        // Get the value of new_scan_barcode field\n        \n frm.clear_table('items');\n      \n    }\n});\n\n",
  "view": "Form"
 }
]